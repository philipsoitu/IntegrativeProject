Index: .idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_10_51_a_m__[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_10_51_a_m__[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_10_51_a_m__[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_10_51_a_m__[Changes]/shelved.patch	(revision e58d595beb1d222a667ec3d9ce2c06e16fe7c2da)
+++ /dev/null	(revision e58d595beb1d222a667ec3d9ce2c06e16fe7c2da)
@@ -1,155 +0,0 @@
-Index: src/main/java/com/coolawesome/integrativeproject/MainController.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.coolawesome.integrativeproject;\r\n\r\nimport com.coolawesome.integrativeproject.utils.Constants;\r\nimport javafx.animation.KeyFrame;\r\nimport javafx.animation.Timeline;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.util.Duration;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Random;\r\n\r\npublic class MainController {\r\n    public static double g = 0.001;\r\n    @FXML\r\n    public ListView<String> selectedPlanetInfoList;\r\n    @FXML\r\n    public Button viewRandBtn;\r\n    @FXML\r\n    private ListView<String> simulationInfoList;\r\n    @FXML\r\n    private Slider gConstSLD;\r\n    @FXML\r\n    private TextField gConstantTXTF;\r\n    @FXML\r\n    private Button playPauseBTN;\r\n    @FXML\r\n    private ChoiceBox<String> algoChoiceBox;\r\n\r\n    @FXML\r\n    private Button TextureBTN;\r\n\r\n    @FXML\r\n    private Button createBTN;\r\n\r\n    @FXML\r\n    private Slider massSLD;\r\n\r\n    @FXML\r\n    private TextField massTXTF;\r\n\r\n    @FXML\r\n    private Slider radiusSLD;\r\n\r\n    @FXML\r\n    private TextField radiusTXTF;\r\n\r\n    @FXML\r\n    private CheckBox sunCheckB;\r\n\r\n    public AnchorPane viewport;\r\n    private Simulation simulation;\r\n    private int secondsElapsed = 0;\r\n    Timeline timeline;\r\n    private ObservableList<String> simulationListContent = FXCollections.observableArrayList(\r\n            Constants.TIME_ELAPSED_PREFIX,\r\n            Constants.PLANET_COUNT_PREFIX,\r\n            Constants.AVERAGE_FORCE_PREFIX,\r\n            Constants.NUMBER_OF_COLLISIONS_PREFIX\r\n    );\r\n\r\n\r\n    /*\r\n    mass\r\n    radius\r\n    isSun\r\n    import texture\r\n     */\r\n\r\n    @FXML\r\n    public void initialize() {\r\n        viewport.sceneProperty().addListener((observableScene, oldScene, newScene) -> {\r\n            if (newScene != null) {\r\n                newScene.focusOwnerProperty().addListener((observable, oldFocusOwner, newFocusOwner) -> {\r\n                    if (newFocusOwner != viewport) {\r\n                        viewport.requestFocus();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    void controllerSetup(Simulation simulation) {\r\n        if (!isNull(simulation)) {\r\n            this.simulation = simulation;\r\n            updateSimInfo();\r\n        } else {\r\n            System.out.println(\"Simulation is null\");\r\n        }\r\n\r\n        if (!simulationListContent.isEmpty()) {\r\n            simulationInfoList.setItems(simulationListContent);\r\n        } else {\r\n            System.out.println(\"simulation list is empty\");\r\n        }\r\n\r\n        initializeTime();\r\n        sliderSetup();\r\n    }\r\n\r\n    public void sliderSetup() {\r\n        //g constant\r\n        if (!isNull(gConstSLD) && !isNull(gConstantTXTF)) {\r\n            gConstSLD.valueProperty().addListener(((observableValue, oldValue, newValue) -> {\r\n                String valueString = String.valueOf(newValue);\r\n                int endIndex = Math.min(valueString.length(), 4);\r\n                gConstantTXTF.setText(valueString.substring(0, endIndex));\r\n                updateGConst();\r\n            }));\r\n\r\n            gConstantTXTF.textProperty().addListener((observableValue, oldValue, newValue) -> {\r\n                if (!newValue.isEmpty() && !isValidDouble(newValue)) {\r\n                    gConstantTXTF.setText(oldValue);\r\n                }\r\n            });\r\n        }\r\n\r\n        //mass\r\n        if (!isNull(massSLD) && !isNull(massTXTF)) {\r\n            massSLD.valueProperty().addListener(((observableValue, oldValue, newValue) -> {\r\n                String valueString = String.valueOf(newValue);\r\n                int endIndex = Math.min(valueString.length(), 4);\r\n                massTXTF.setText(valueString.substring(0, endIndex));\r\n            }));\r\n\r\n            massTXTF.textProperty().addListener((observableValue, oldValue, newValue) -> {\r\n                if (!newValue.isEmpty() && !isValidDouble(newValue)) {\r\n                    massTXTF.setText(oldValue);\r\n                }\r\n            });\r\n        }\r\n\r\n        //radius\r\n        if (!isNull(radiusSLD) && !isNull(radiusTXTF)) {\r\n            radiusSLD.valueProperty().addListener(((observableValue, oldValue, newValue) -> {\r\n                String valueString = String.valueOf(newValue);\r\n                int endIndex = Math.min(valueString.length(), 4);\r\n                radiusTXTF.setText(valueString.substring(0, endIndex));\r\n            }));\r\n\r\n            radiusTXTF.textProperty().addListener((observableValue, oldValue, newValue) -> {\r\n                if (!newValue.isEmpty() && !isValidDouble(newValue)) {\r\n                    radiusTXTF.setText(oldValue);\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        setInitialValues();\r\n    }\r\n\r\n    private boolean isValidDouble(String str) {\r\n        if (isNull(str)) {\r\n            return false;\r\n        }\r\n        try {\r\n            Double.parseDouble(str);\r\n            return true;\r\n        } catch (NumberFormatException e) {\r\n            System.out.println(\"Input Corrected\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public void updateSimInfo() {\r\n        simulationListContent.set(1, Constants.PLANET_COUNT_PREFIX + getPlanetCount());\r\n    }\r\n\r\n    private void setInitialValues() {\r\n        if (!isNull(gConstSLD)) {\r\n            gConstSLD.setValue(g);\r\n        } else {\r\n            System.out.println(\"Gravity Constant Slider is null\");\r\n        }\r\n\r\n        massSLD.setValue(0);\r\n        massTXTF.setText(\"0\");\r\n        radiusSLD.setValue(0);\r\n        radiusTXTF.setText(\"0\");\r\n\r\n        algoChoiceBox.getItems().addAll(Constants.ALGORITHM_CHOICES);\r\n\r\n        algoChoiceBox.setValue(Constants.ALGORITHM_CHOICES[0]);\r\n\r\n        gConstantTXTF.setText(g + \"\");\r\n    }\r\n\r\n    private void initializeTime() {\r\n        timeline = new Timeline(new KeyFrame(\r\n                Duration.seconds(1),\r\n                event -> {\r\n                    secondsElapsed++;\r\n                    updateTimer();\r\n                }\r\n        ));\r\n        timeline.setCycleCount(Timeline.INDEFINITE);\r\n        timeline.play();\r\n    }\r\n\r\n    private void updateTimer() {\r\n        int hours = secondsElapsed / 3600;\r\n        int minutes = (secondsElapsed % 3600) / 60;\r\n        int seconds = secondsElapsed % 60;\r\n\r\n        simulationListContent.set(0, Constants.TIME_ELAPSED_PREFIX + String.format(\"%02d:%02d:%02d\", hours, minutes, seconds));\r\n    }\r\n\r\n    private int getPlanetCount() {\r\n        return simulation.planetMap.size();\r\n    }\r\n\r\n    private void updateGConst() {\r\n        g = gConstSLD.getValue();\r\n    }\r\n\r\n    private boolean isNull(Object obj) {\r\n        return obj == null;\r\n    }\r\n\r\n    @FXML\r\n    void playPauseSim(ActionEvent event) {\r\n        simulation.isPaused = !simulation.isPaused;\r\n\r\n        if (simulation.isPaused) {\r\n            System.out.println(\"Simulation is paused\");\r\n            playPauseBTN.setText(\"Play\");\r\n        } else {\r\n            System.out.println(\"Simulation is playing\");\r\n            playPauseBTN.setText(\"Pause\");\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void onTXTFUpdate(ActionEvent event) {\r\n        Slider source = (Slider) event.getSource();\r\n\r\n        if (source.equals(gConstSLD)) {\r\n            try {\r\n                gConstSLD.setValue(Double.parseDouble(gConstantTXTF.getText()));\r\n                updateGConst();\r\n            } catch (NumberFormatException e) {\r\n                System.out.println(\"Input Corrected in G Constant Slider\");\r\n            }\r\n\r\n        } else if (source.equals(massSLD)) {\r\n            try {\r\n                massSLD.setValue(Double.parseDouble(massTXTF.getText()));\r\n            } catch (NumberFormatException e) {\r\n                System.out.println(\"Input corrected in mass slider\");\r\n            }\r\n        } else if (source.equals(radiusSLD)) {\r\n            try {\r\n                massSLD.setValue(Double.parseDouble(massTXTF.getText()));\r\n                updateGConst();\r\n            } catch (NumberFormatException e) {\r\n                System.out.println(\"Input Corrected in mass Slider\");\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public void updateSelectedPlanetInfo(Planet planet) {\r\n        ObservableList<String> planetInfo = FXCollections.observableArrayList(\r\n                \"Position: \" + String.format(\"%.3f, %.3f, %.3f\", planet.position.x, planet.position.y, planet.position.z),\r\n                \"Velocity: \" + String.format(\"%.3f, %.3f, %.3f\", planet.velocity.x, planet.velocity.y, planet.velocity.z),\r\n                \"Accel: \" + String.format(\"%.1e, %.1e, %.1e\", planet.acceleration.x, planet.acceleration.y, planet.acceleration.z),\r\n                \"Radius: \" + String.format(\"%.3f\", planet.radius),\r\n                \"Mass: \" + String.format(\"%.3f\", planet.mass),\r\n                \"Color: \" + planet.color\r\n        );\r\n        selectedPlanetInfoList.setItems(planetInfo);\r\n    }\r\n\r\n    @FXML\r\n    public void viewRandPlanet(ActionEvent event) {\r\n        // Get a random planet from the planetMap\r\n        List<String> keys = new ArrayList<>(simulation.planetMap.keySet());\r\n        String randomKey = keys.get(new Random().nextInt(keys.size()));\r\n        Planet randomPlanet = simulation.planetMap.get(randomKey);\r\n\r\n        // Update the selected planet info\r\n        updateSelectedPlanetInfo(randomPlanet);\r\n\r\n        // Update the current camera planet in the SimulationView\r\n        simulation.simulationView.setCurrentCamPlanetID(randomKey);\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/com/coolawesome/integrativeproject/MainController.java b/src/main/java/com/coolawesome/integrativeproject/MainController.java
---- a/src/main/java/com/coolawesome/integrativeproject/MainController.java	(revision 7d67bba7c1ed517317d2fcee7142e252499146dc)
-+++ b/src/main/java/com/coolawesome/integrativeproject/MainController.java	(date 1712069006153)
-@@ -1,6 +1,7 @@
- package com.coolawesome.integrativeproject;
- 
- import com.coolawesome.integrativeproject.utils.Constants;
-+import com.coolawesome.integrativeproject.utils.Vector3D;
- import javafx.animation.KeyFrame;
- import javafx.animation.Timeline;
- import javafx.collections.FXCollections;
-@@ -14,6 +15,7 @@
- import java.util.ArrayList;
- import java.util.List;
- import java.util.Random;
-+import java.util.UUID;
- 
- public class MainController {
-     public static double g = 0.001;
-@@ -149,8 +151,6 @@
-                 }
-             });
-         }
--
--
-         setInitialValues();
-     }
- 
-@@ -262,7 +262,41 @@
-             }
- 
-         }
-+    }
-+
-+    @FXML
-+    void createCustomPlanet(ActionEvent event) {
-+
-+        //position is camera position
-+        //velocity is camera velocity
-+        //radius from text field
-+        //mass from text field
-+        //isSun from choice box
-+
-+
-+        double x = Math.random() * 1000 - 150;
-+        double y = Math.random() * 1000 - 150;
-+        double z = Math.random() * 1000 - 150;
- 
-+        double Vx = Math.random() * 2;
-+        double Vy = Math.random() * 2;
-+        double Vz = Math.random() * 2;
-+
-+        Vector3D position = new Vector3D(x,y,z);
-+        //Vector3D position = new Vector3D(0,0,0);
-+        Vector3D velocity = new Vector3D(Vx,Vy,Vz);
-+
-+        double radius = Double.parseDouble(radiusTXTF.getText());
-+        double mass = Double.parseDouble(massTXTF.getText());
-+        boolean isSun = sunCheckB.isSelected();
-+
-+
-+
-+        Planet planet = new Planet(position, velocity, radius, mass, isSun);
-+
-+        String uniqueID = UUID.randomUUID().toString().replaceAll("-", "");
-+
-+        simulation.planetMap.put(uniqueID, planet);
- 
-     }
- 
-Index: src/main/java/com/coolawesome/integrativeproject/Simulation.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.coolawesome.integrativeproject;\r\n\r\nimport com.coolawesome.integrativeproject.utils.Vector3D;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.scene.paint.Color;\r\n\r\nimport java.util.*;\r\n\r\npublic class Simulation {\r\n\r\n    Map<String, Planet> planetMap = new HashMap<>();\r\n    SimulationView simulationView;\r\n\r\n    boolean isPaused = false;\r\n\r\n    public Simulation(AnchorPane viewport, MainController controller) {\r\n        simulationView = new SimulationView(viewport, planetMap, controller);\r\n        initialize(100);\r\n    }\r\n\r\n    public void initialize(int numOfBodies) {\r\n        for (int i = 0; i < numOfBodies; i++) {\r\n\r\n            // Randomizing parameters\r\n            double x = Math.random() * 300 - 150;\r\n            double y = Math.random() * 300 - 150;\r\n            double z = Math.random() * 300 - 150;\r\n            Vector3D randPos = new Vector3D(x,y,z);\r\n            Vector3D randVel = new Vector3D();\r\n            double randRad = 1 + Math.random() * 2;\r\n            double randMass = 5000;\r\n            boolean sun = Math.random() * 4 < 1;\r\n\r\n            // Generate a unique ID for the planet\r\n            String uniqueID = UUID.randomUUID().toString().replaceAll(\"-\", \"\");\r\n\r\n            // Create the Planet object\r\n            Planet randPlanet = new Planet(randPos, randVel, randRad, randMass, sun);\r\n\r\n            // Add the Planet to the Map\r\n            planetMap.put(uniqueID, randPlanet);\r\n        }\r\n        planetMap.put(\"sun\", new Planet(new Vector3D(5000, 0, 0), new Vector3D(), 1000, 100000, true));\r\n    }\r\n\r\n    public void update(double dt){\r\n        // handle physics and collisions\r\n        if(!isPaused) {\r\n            updatePosition(dt);\r\n            handleCollisions();\r\n        }\r\n\r\n        simulationView.update(dt);\r\n    }\r\n\r\n    private void updatePosition(double dt) {\r\n        planetMap.forEach((id, p1) -> {\r\n            Vector3D ftotal = new Vector3D();\r\n            planetMap.forEach((id2, p2) -> {\r\n                if (p1 != p2) {\r\n                    Vector3D dist = Vector3D.difference(p2.position, p1.position);\r\n                    Vector3D f = Vector3D.multiplication((MainController.g * p1.mass * p2.mass) / (dist.magnitude() * dist.magnitude()), Vector3D.unitVector(dist));\r\n                    ftotal.add(f);\r\n                }\r\n                p1.acceleration = Vector3D.multiplication((1 / p1.mass), ftotal);\r\n                p1.velocity.add(Vector3D.multiplication(dt, p1.acceleration));\r\n                p1.position.add(Vector3D.multiplication(dt, p1.velocity));\r\n            });\r\n        });\r\n    }\r\n\r\n    private void handleCollisions() {\r\n        List<String> idPlanetsToRemove = new ArrayList<>();\r\n        planetMap.forEach((id, p1) -> {\r\n            planetMap.forEach((id2, p2) -> {\r\n                if (p1 != p2 && p1 != null && p2 != null) {\r\n                    Vector3D n = Vector3D.unitVector(Vector3D.difference(p1.position, p2.position));\r\n                    double dist = Math.min(Vector3D.sum(Vector3D.difference(p2.position, Vector3D.multiplication(p2.radius, n)), p1.position).magnitude(), Vector3D.difference(Vector3D.difference(p2.position, Vector3D.multiplication(p2.radius, n)), p1.position).magnitude());\r\n                    if (p1.radius > dist) {\r\n                        p1.mass += p2.mass;\r\n                        p1.radius = Math.sqrt(p1.radius * p1.radius + p2.radius * p2.radius);\r\n                        double totalMass = p1.mass + p2.mass;\r\n                        int red = (int)Math.min(((p1.mass/totalMass)*p1.color.getRed() + (p2.mass/totalMass)*p2.color.getRed())*255,255);\r\n                        int green = (int)Math.min(((p1.mass/totalMass)*p1.color.getGreen() + (p2.mass/totalMass)*p2.color.getGreen())*255,255);\r\n                        int blue = (int)Math.min(((p1.mass/totalMass)*p1.color.getBlue() + (p2.mass/totalMass)*p2.color.getBlue())*255,255);\r\n\r\n                        p1.color = Color.rgb(red, green, blue);\r\n                        idPlanetsToRemove.add(id2);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        idPlanetsToRemove.forEach((id) -> planetMap.remove(id));\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/com/coolawesome/integrativeproject/Simulation.java b/src/main/java/com/coolawesome/integrativeproject/Simulation.java
---- a/src/main/java/com/coolawesome/integrativeproject/Simulation.java	(revision 7d67bba7c1ed517317d2fcee7142e252499146dc)
-+++ b/src/main/java/com/coolawesome/integrativeproject/Simulation.java	(date 1712068850235)
-@@ -15,7 +15,7 @@
- 
-     public Simulation(AnchorPane viewport, MainController controller) {
-         simulationView = new SimulationView(viewport, planetMap, controller);
--        initialize(100);
-+        initialize(0);
-     }
- 
-     public void initialize(int numOfBodies) {
-Index: src/main/java/com/coolawesome/integrativeproject/SimulationView.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.coolawesome.integrativeproject;\r\n\r\nimport com.coolawesome.integrativeproject.utils.PIDController;\r\nimport javafx.scene.*;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.input.KeyCode;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.layout.AnchorPane;\r\n\r\nimport javafx.scene.shape.Sphere;\r\nimport org.fxyz3d.scene.Skybox;\r\nimport org.fxyz3d.utils.CameraTransformer;\r\n\r\nimport com.coolawesome.integrativeproject.utils.Vector3D;\r\n\r\nimport java.util.HashSet;\r\nimport java.util.Map;\r\nimport java.util.Set;\r\n\r\n\r\npublic class SimulationView extends Group {\r\n\r\n    private final Set<KeyCode> keysPressed = new HashSet<>();\r\n\r\n    private final Map<String, Planet> planetMap;\r\n    private final MainController mainController;\r\n    private String currentCamPlanetID = \"\";\r\n\r\n    private final Image\r\n        backImage = new Image(\"file:src/main/resources/images/skybox/back.png\"),\r\n        bottomImage = new Image(\"file:src/main/resources/images/skybox/bottom.png\"),\r\n        frontImage = new Image(\"file:src/main/resources/images/skybox/front.png\"),\r\n        leftImage = new Image(\"file:src/main/resources/images/skybox/left.png\"),\r\n        rightImage = new Image(\"file:src/main/resources/images/skybox/right.png\"),\r\n        topImage = new Image(\"file:src/main/resources/images/skybox/top.png\"),\r\n        cubeMap = new Image(\"file:src/main/resources/images/skybox/cubemap.png\");\r\n    private final Skybox skyBox;\r\n\r\n    private final PerspectiveCamera camera;\r\n    private final double FOV = 60;\r\n    private final CameraTransformer cameraTransform = new CameraTransformer();\r\n    private final Vector3D cameraVelocity = new Vector3D();\r\n\r\n    private double deltaMouseX, deltaMouseY = 0;\r\n\r\n    public SimulationView(AnchorPane pane, Map<String, Planet> planetMap, MainController mainController) {\r\n        this.planetMap = planetMap;\r\n        this.mainController = mainController;\r\n\r\n        // Set up the subscene for 3D content\r\n        SubScene subScene = new SubScene(this, pane.getWidth(), pane.getHeight(), true, SceneAntialiasing.BALANCED);\r\n        subScene.widthProperty().bind(pane.widthProperty());\r\n        subScene.heightProperty().bind(pane.heightProperty());\r\n        subScene.setFill(Color.BLACK);\r\n        pane.getChildren().add(subScene);\r\n\r\n        // Set up the camera\r\n        camera = new PerspectiveCamera(true);\r\n        camera.setNearClip(0.1);\r\n        camera.setFarClip(100000.0);\r\n        camera.setTranslateX(0);\r\n        camera.setTranslateY(0);\r\n        camera.setTranslateZ(0);\r\n        camera.setFieldOfView(FOV);\r\n        cameraTransform.getChildren().add(camera);\r\n        cameraTransform.t.setX(0);\r\n        cameraTransform.t.setY(0);\r\n        cameraTransform.t.setZ(0);\r\n        cameraTransform.rx.setPivotZ(0);\r\n        cameraTransform.ry.setPivotZ(0);\r\n        subScene.setCamera(camera);\r\n        cameraTransform.t.setZ(-100);\r\n\r\n        AmbientLight al = new AmbientLight(Color.rgb(100, 100, 100));\r\n\r\n        skyBox = new Skybox(topImage, bottomImage, rightImage, leftImage, frontImage, backImage, 100000, camera);\r\n\r\n        this.getChildren().addAll(al, skyBox);\r\n\r\n        // Set up the event handlers\r\n        subScene.setOnMousePressed(event -> {\r\n            deltaMouseX = event.getSceneX();\r\n            deltaMouseY = event.getSceneY();\r\n        });\r\n        subScene.setOnMouseDragged(event -> {\r\n            currentCamPlanetID = \"\";\r\n            deltaMouseX = event.getSceneX() - deltaMouseX;\r\n            deltaMouseY = event.getSceneY() - deltaMouseY;\r\n\r\n            cameraTransform.ry.setAngle(cameraTransform.ry.getAngle() + deltaMouseX * 0.2);\r\n            cameraTransform.rx.setAngle(cameraTransform.rx.getAngle() - deltaMouseY * 0.2);\r\n\r\n            deltaMouseX = event.getSceneX();\r\n            deltaMouseY = event.getSceneY();\r\n        });\r\n        pane.setOnKeyPressed(event -> keysPressed.add(event.getCode()));\r\n        pane.setOnKeyReleased(event -> keysPressed.remove(event.getCode()));\r\n\r\n        subScene.requestFocus();\r\n    }\r\n\r\n    public void update(double dt) {\r\n        // Update the selected planet info list\r\n        if (!currentCamPlanetID.isEmpty()) {\r\n            this.mainController.updateSelectedPlanetInfo(planetMap.get(currentCamPlanetID));\r\n        }\r\n\r\n        // check if there are any planets not currently in the scene\r\n        planetMap.forEach((id, planet) -> {\r\n            if (!this.getChildren().contains(planet.planetNode)) {\r\n                this.getChildren().add(planet.planetNode);\r\n                planet.planetNode.setOnMouseClicked(event -> {\r\n                    currentCamPlanetID = id;\r\n                });\r\n            }\r\n            if (planet.isSun && !this.getChildren().contains(planet.sunLight)) {\r\n                this.getChildren().add(planet.sunLight);\r\n            }\r\n        });\r\n\r\n        // check if there are any planets in the scene that are not in the map\r\n        Set<Node> nodesToRemove = new HashSet<>();\r\n        for (Node node : this.getChildren()) {\r\n            if (node instanceof Sphere) {\r\n                boolean found = false;\r\n                for (Planet planet : planetMap.values()) {\r\n                    if (planet.planetNode.equals(node)) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!found) {\r\n                    nodesToRemove.add(node);\r\n                    if (currentCamPlanetID.equals(node.getId())) {\r\n                        currentCamPlanetID = \"\";\r\n                    }\r\n                }\r\n            }\r\n            if (node instanceof PointLight) {\r\n                boolean found = false;\r\n                for (Planet planet : planetMap.values()) {\r\n                    if (planet.isSun && planet.sunLight.equals(node)) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!found) {\r\n                    nodesToRemove.add(node);\r\n                }\r\n            }\r\n        }\r\n        this.getChildren().removeAll(nodesToRemove);\r\n\r\n        //update the position of the planets\r\n        for (var planet : planetMap.values()) {\r\n            planet.planetNode.setTranslateX(planet.position.x);\r\n            planet.planetNode.setTranslateY(planet.position.y);\r\n            planet.planetNode.setTranslateZ(planet.position.z);\r\n            if (planet.isSun){\r\n                planet.sunLight.setTranslateX(planet.position.x);\r\n                planet.sunLight.setTranslateY(planet.position.y);\r\n                planet.sunLight.setTranslateZ(planet.position.z);\r\n            }\r\n        }\r\n\r\n        //TODO: fix looking straight up/down\r\n\r\n        // Move the camera\r\n        double yaw = Math.toRadians(cameraTransform.ry.getAngle());\r\n        double pitch = Math.toRadians(cameraTransform.rx.getAngle());\r\n\r\n        double x = Math.cos(pitch) * Math.sin(yaw);\r\n        double y = Math.sin(pitch);\r\n        double z = Math.cos(pitch) * Math.cos(yaw);\r\n\r\n        Vector3D facing = new Vector3D(x, y, z);\r\n        facing.normalize();\r\n\r\n        Vector3D right = Vector3D.crossProduct(facing, new Vector3D(0, 1, 0));\r\n        right.normalize();\r\n\r\n        Vector3D up = Vector3D.crossProduct(right, facing);\r\n        up.normalize();\r\n\r\n        facing.multiply(0.6); // reduce the speed of the camera\r\n        right.multiply(0.6);\r\n        up.multiply(0.6);\r\n\r\n        if (!currentCamPlanetID.isEmpty()) {\r\n            Planet planet = planetMap.get(currentCamPlanetID);\r\n            if (planet != null) {\r\n                Vector3D camPos = new Vector3D(\r\n                        cameraTransform.t.getX(),\r\n                        cameraTransform.t.getY(),\r\n                        cameraTransform.t.getZ()\r\n                );\r\n                Vector3D planetPos = planet.position;\r\n                Vector3D direction = Vector3D.difference(planetPos, camPos);\r\n                double distance = direction.magnitude();\r\n                direction.normalize();\r\n\r\n                double directionPitch = -Math.toDegrees(Math.asin(direction.y));\r\n                double directionYaw = Math.toDegrees(Math.atan2(direction.x, direction.z));\r\n\r\n                cameraTransform.rx.setAngle(lerpAngle(cameraTransform.rx.getAngle(), directionPitch, 0.5));\r\n                cameraTransform.ry.setAngle(lerpAngle(cameraTransform.ry.getAngle(), directionYaw, 0.5));\r\n\r\n                //Use PID controller to move towards planet\r\n                direction.negate();\r\n                PIDController pidController = new PIDController(1e-15, 1e-2, 1e-8);\r\n                double pidOutput = pidController.calculate(planet.radius * 3, distance);\r\n                direction.multiply(pidOutput);\r\n                cameraVelocity.add(direction);\r\n\r\n                //TODO: orbit camera around planet\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            if (keysPressed.contains(KeyCode.W)) {\r\n                cameraVelocity.x += facing.x;\r\n                cameraVelocity.y -= facing.y;\r\n                cameraVelocity.z += facing.z;\r\n            }\r\n            if (keysPressed.contains(KeyCode.S)) {\r\n                cameraVelocity.x -= facing.x;\r\n                cameraVelocity.y += facing.y;\r\n                cameraVelocity.z -= facing.z;\r\n            }\r\n            if (keysPressed.contains(KeyCode.A)) {\r\n                cameraVelocity.x += right.x;\r\n                cameraVelocity.y -= right.y;\r\n                cameraVelocity.z += right.z;\r\n            }\r\n            if (keysPressed.contains(KeyCode.D)) {\r\n                cameraVelocity.x -= right.x;\r\n                cameraVelocity.y += right.y;\r\n                cameraVelocity.z -= right.z;\r\n            }\r\n            if (keysPressed.contains(KeyCode.SPACE)) {\r\n                cameraVelocity.x += up.x;\r\n                cameraVelocity.y -= up.y;\r\n                cameraVelocity.z += up.z;\r\n            }\r\n            if (keysPressed.contains(KeyCode.CONTROL)) {\r\n                cameraVelocity.x -= up.x;\r\n                cameraVelocity.y += up.y;\r\n                cameraVelocity.z -= up.z;\r\n            }\r\n            if (keysPressed.contains(KeyCode.SHIFT)) {\r\n                cameraVelocity.multiply(1.2);\r\n            }\r\n        }\r\n\r\n        cameraTransform.t.setX(cameraTransform.t.getX() + cameraVelocity.x);\r\n        cameraTransform.t.setY(cameraTransform.t.getY() + cameraVelocity.y);\r\n        cameraTransform.t.setZ(cameraTransform.t.getZ() + cameraVelocity.z);\r\n\r\n        cameraVelocity.multiply(0.8);\r\n    }\r\n\r\n    private double lerpAngle(double start, double end, double t) {\r\n        double diff = end - start;\r\n        // Normalize the difference in the angle\r\n        while (diff < -180) diff += 360;\r\n        while (diff > 180) diff -= 360;\r\n        return start + diff * t;\r\n    }\r\n\r\n    public void setCurrentCamPlanetID(String planetID) {\r\n        this.currentCamPlanetID = planetID;\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/com/coolawesome/integrativeproject/SimulationView.java b/src/main/java/com/coolawesome/integrativeproject/SimulationView.java
---- a/src/main/java/com/coolawesome/integrativeproject/SimulationView.java	(revision 7d67bba7c1ed517317d2fcee7142e252499146dc)
-+++ b/src/main/java/com/coolawesome/integrativeproject/SimulationView.java	(date 1712066236074)
-@@ -53,7 +53,6 @@
-         subScene.heightProperty().bind(pane.heightProperty());
-         subScene.setFill(Color.BLACK);
-         pane.getChildren().add(subScene);
--
-         // Set up the camera
-         camera = new PerspectiveCamera(true);
-         camera.setNearClip(0.1);
-Index: src/main/resources/com/coolawesome/integrativeproject/main-view.fxml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.geometry.Insets?>\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.control.CheckBox?>\r\n<?import javafx.scene.control.ChoiceBox?>\r\n<?import javafx.scene.control.Label?>\r\n<?import javafx.scene.control.ListView?>\r\n<?import javafx.scene.control.Separator?>\r\n<?import javafx.scene.control.Slider?>\r\n<?import javafx.scene.control.TextField?>\r\n<?import javafx.scene.control.TitledPane?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.layout.BorderPane?>\r\n<?import javafx.scene.layout.HBox?>\r\n<?import javafx.scene.layout.VBox?>\r\n<?import javafx.scene.paint.Color?>\r\n<?import javafx.scene.paint.LinearGradient?>\r\n<?import javafx.scene.paint.Stop?>\r\n<?import javafx.scene.text.Font?>\r\n\r\n<BorderPane xmlns=\"http://javafx.com/javafx/20.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"com.coolawesome.integrativeproject.MainController\">\r\n  <left>\r\n    <VBox spacing=\"10\" style=\"-fx-padding: 10;\">\r\n         <Label text=\"Space Simulation\">\r\n            <textFill>\r\n               <LinearGradient endX=\"0.6926713947990544\" endY=\"0.7990543735224587\" startY=\"0.6832151300236406\">\r\n                  <stops>\r\n                     <Stop>\r\n                        <color>\r\n                           <Color red=\"1.0\" green=\"0.6499999761581421\" />\r\n                        </color>\r\n                     </Stop>\r\n                     <Stop offset=\"1.0\">\r\n                        <color>\r\n                           <Color red=\"1.0\" green=\"0.28240740299224854\" blue=\"0.8923611044883728\" />\r\n                        </color>\r\n                     </Stop>\r\n                  </stops>\r\n               </LinearGradient>\r\n            </textFill>\r\n            <font>\r\n               <Font name=\"Marlett\" size=\"28.0\" />\r\n            </font>\r\n         </Label>\r\n         <HBox prefHeight=\"5.0\" prefWidth=\"241.0\" spacing=\"5.0\">\r\n            <children>\r\n               <Button mnemonicParsing=\"false\" text=\"Save\" />\r\n               <Button mnemonicParsing=\"false\" text=\"Load\" />\r\n            </children>\r\n         </HBox>\r\n      <Label text=\"Simulation Info:\" />\r\n      <ListView fx:id=\"simulationInfoList\" prefHeight=\"220.0\" prefWidth=\"220.0\">\r\n        <!-- Add items here -->\r\n      </ListView>\r\n         <AnchorPane prefHeight=\"200.0\" prefWidth=\"200.0\">\r\n            <children>\r\n               <Label text=\"Controls:\">\r\n                  <font>\r\n                     <Font size=\"14.0\" />\r\n                  </font>\r\n               </Label>\r\n               <VBox prefHeight=\"200.0\" prefWidth=\"247.0\">\r\n                  <children>\r\n                     <Label text=\"Algorithm:\">\r\n                        <VBox.margin>\r\n                           <Insets top=\"20.0\" />\r\n                        </VBox.margin>\r\n                        <padding>\r\n                           <Insets top=\"10.0\" />\r\n                        </padding>\r\n                     </Label>\r\n                     <ChoiceBox fx:id=\"algoChoiceBox\" prefHeight=\"25.0\" prefWidth=\"95.0\">\r\n                        <VBox.margin>\r\n                           <Insets top=\"5.0\" />\r\n                        </VBox.margin>\r\n                     </ChoiceBox>\r\n                     <HBox prefHeight=\"42.0\" prefWidth=\"220.0\">\r\n                        <children>\r\n                           <Button fx:id=\"playPauseBTN\" mnemonicParsing=\"false\" onAction=\"#playPauseSim\" text=\"Pause\" />\r\n                        </children>\r\n                        <VBox.margin>\r\n                           <Insets top=\"10.0\" />\r\n                        </VBox.margin>\r\n                     </HBox>\r\n                     <HBox alignment=\"CENTER_LEFT\" prefHeight=\"100.0\" prefWidth=\"200.0\">\r\n                        <VBox.margin>\r\n                           <Insets top=\"5.0\" />\r\n                        </VBox.margin>\r\n                     </HBox>\r\n                     <HBox alignment=\"CENTER_LEFT\" prefHeight=\"100.0\" prefWidth=\"200.0\">\r\n                        <children>\r\n                           <Label text=\"G Constant:\">\r\n                              <HBox.margin>\r\n                                 <Insets right=\"5.0\" />\r\n                              </HBox.margin>\r\n                           </Label>\r\n                           <Slider fx:id=\"gConstSLD\" blockIncrement=\"0.005\" max=\"0.01\" min=\"1.0E-8\" prefHeight=\"14.0\" prefWidth=\"84.0\" showTickMarks=\"true\">\r\n                              <HBox.margin>\r\n                                 <Insets />\r\n                              </HBox.margin>\r\n                           </Slider>\r\n                           <TextField fx:id=\"gConstantTXTF\" onAction=\"#onTXTFUpdate\" prefHeight=\"25.0\" prefWidth=\"80.0\" />\r\n                        </children>\r\n                     </HBox>\r\n                  </children>\r\n               </VBox>\r\n            </children>\r\n         </AnchorPane>\r\n    </VBox>\r\n  </left>\r\n  <center>\r\n    <AnchorPane fx:id=\"viewport\">\r\n      <!-- Content for viewport here -->\r\n    </AnchorPane>\r\n  </center>\r\n  <right>\r\n    <VBox spacing=\"10\" style=\"-fx-padding: 10;\">\r\n      <TitledPane collapsible=\"false\" text=\"New Planet Preview\">\r\n        <VBox>\r\n               <children>\r\n                  <AnchorPane maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"164.0\" prefWidth=\"214.0\">\r\n                     <padding>\r\n                        <Insets left=\"1.0\" right=\"1.0\" />\r\n                     </padding>\r\n                  </AnchorPane>\r\n                  <VBox prefHeight=\"200.0\" prefWidth=\"100.0\" spacing=\"30.0\">\r\n                     <children>\r\n                        <HBox prefHeight=\"100.0\" prefWidth=\"200.0\">\r\n                           <children>\r\n                              <Slider fx:id=\"massSLD\" />\r\n                              <TextField fx:id=\"massTXTF\" onAction=\"#onTXTFUpdate\" />\r\n                           </children>\r\n                        </HBox>\r\n                        <HBox prefHeight=\"100.0\" prefWidth=\"200.0\">\r\n                           <children>\r\n                              <Slider fx:id=\"radiusSLD\" />\r\n                              <TextField fx:id=\"radiusTXTF\" onAction=\"#onTXTFUpdate\" />\r\n                           </children>\r\n                        </HBox>\r\n                        <CheckBox fx:id=\"sunCheckB\" mnemonicParsing=\"false\" text=\"Sun\" />\r\n                        <Button fx:id=\"TextureBTN\" mnemonicParsing=\"false\" text=\"Texture\" />\r\n                        <Button fx:id=\"createBTN\" mnemonicParsing=\"false\" text=\"Create\" />\r\n                     </children>\r\n                  </VBox>\r\n               </children></VBox>\r\n      </TitledPane>\r\n      <TitledPane collapsible=\"false\" text=\"Currently Selected Planet Info\">\r\n        <VBox alignment=\"TOP_CENTER\" spacing=\"10.0\">\r\n               <children>\r\n                  <Button fx:id=\"viewRandBtn\" alignment=\"CENTER\" mnemonicParsing=\"false\" onAction=\"#viewRandPlanet\" text=\"View Random Planet\" textAlignment=\"CENTER\" />\r\n                  <Separator prefWidth=\"200.0\" />\r\n                   <ListView fx:id=\"selectedPlanetInfoList\" prefHeight=\"220.0\" prefWidth=\"220.0\">\r\n                       <!-- Add items here -->\r\n                   </ListView>\r\n               </children></VBox>\r\n      </TitledPane>\r\n    </VBox>\r\n  </right>\r\n</BorderPane>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/resources/com/coolawesome/integrativeproject/main-view.fxml b/src/main/resources/com/coolawesome/integrativeproject/main-view.fxml
---- a/src/main/resources/com/coolawesome/integrativeproject/main-view.fxml	(revision 7d67bba7c1ed517317d2fcee7142e252499146dc)
-+++ b/src/main/resources/com/coolawesome/integrativeproject/main-view.fxml	(date 1712068049801)
-@@ -126,21 +126,23 @@
-                   </AnchorPane>
-                   <VBox prefHeight="200.0" prefWidth="100.0" spacing="30.0">
-                      <children>
--                        <HBox prefHeight="100.0" prefWidth="200.0">
-+                        <HBox prefHeight="100.0" prefWidth="200.0" spacing="5.0">
-                            <children>
--                              <Slider fx:id="massSLD" />
--                              <TextField fx:id="massTXTF" onAction="#onTXTFUpdate" />
-+                              <Label text="Radius:" />
-+                              <Slider fx:id="massSLD" max="10.0" min="1.0" prefWidth="110.0" />
-+                              <TextField fx:id="massTXTF" onAction="#onTXTFUpdate" prefHeight="25.0" prefWidth="65.0" />
-                            </children>
-                         </HBox>
--                        <HBox prefHeight="100.0" prefWidth="200.0">
-+                        <HBox prefHeight="100.0" prefWidth="200.0" spacing="5.0">
-                            <children>
--                              <Slider fx:id="radiusSLD" />
--                              <TextField fx:id="radiusTXTF" onAction="#onTXTFUpdate" />
-+                              <Label text="Mass:" />
-+                              <Slider fx:id="radiusSLD" max="999999.0" min="1000.0" prefHeight="14.0" prefWidth="109.0" />
-+                              <TextField fx:id="radiusTXTF" onAction="#onTXTFUpdate" prefHeight="25.0" prefWidth="60.0" />
-                            </children>
-                         </HBox>
-                         <CheckBox fx:id="sunCheckB" mnemonicParsing="false" text="Sun" />
-                         <Button fx:id="TextureBTN" mnemonicParsing="false" text="Texture" />
--                        <Button fx:id="createBTN" mnemonicParsing="false" text="Create" />
-+                        <Button fx:id="createBTN" mnemonicParsing="false" onAction="#createCustomPlanet" text="Create" />
-                      </children>
-                   </VBox>
-                </children></VBox>
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_9_48_a_m__[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_9_48_a_m__[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_9_48_a_m__[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_9_48_a_m__[Changes]/shelved.patch	(revision e58d595beb1d222a667ec3d9ce2c06e16fe7c2da)
+++ /dev/null	(revision e58d595beb1d222a667ec3d9ce2c06e16fe7c2da)
@@ -1,787 +0,0 @@
-Index: src/main/java/com/coolawesome/integrativeproject/utils/Vector3D.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.coolawesome.integrativeproject.utils;\r\n\r\n\r\npublic class Vector3D {\r\n\r\n    public double x;\r\n    public double y;\r\n    public double z;\r\n\r\n    public Vector3D(double x, double y, double z) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n\r\n    public Vector3D() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n    }\r\n\r\n    public static Vector3D sum(Vector3D... vectors) {\r\n        double x = 0;\r\n        double y = 0;\r\n        double z = 0;\r\n\r\n        for (var vector : vectors) {\r\n            x += vector.x;\r\n            y += vector.y;\r\n            z += vector.z;\r\n        }\r\n        return new Vector3D(x, y, z);\r\n    }\r\n\r\n    public static Vector3D difference(Vector3D v1, Vector3D v2) {\r\n        double x = v1.x - v2.x;\r\n        double y = v1.y - v2.y;\r\n        double z = v1.z - v2.z;\r\n        return new Vector3D(x, y, z);\r\n    }\r\n\r\n    public static Vector3D multiplication(double multiplier, Vector3D v1) {\r\n        double x = multiplier * v1.x;\r\n        double y = multiplier * v1.y;\r\n        double z = multiplier * v1.z;\r\n        return new Vector3D(x, y, z);\r\n    }\r\n\r\n    public static double dotProduct(Vector3D v1, Vector3D v2) {\r\n        return (v1.x * v2.x) + (v1.y * v2.y) + (v1.z * v2.z);\r\n    }\r\n\r\n    static public Vector3D unitVector(Vector3D v) {\r\n        double magnitude = v.magnitude();\r\n        return new Vector3D(v.x / magnitude, v.y / magnitude, v.z / magnitude);\r\n    }\r\n\r\n    public static Vector3D crossProduct(Vector3D v1, Vector3D v2) {\r\n        double x = (v1.y * v2.z) - (v1.z * v2.y);\r\n        double y = (v1.z * v2.x) - (v1.x * v2.z);\r\n        double z = (v1.x * v2.y) - (v1.y * v2.x);\r\n        return new Vector3D(x, y, z);\r\n    }\r\n\r\n    public void normalize() {\r\n        double magnitude = magnitude();\r\n        this.x /= magnitude;\r\n        this.y /= magnitude;\r\n        this.z /= magnitude;\r\n    }\r\n\r\n    public void add(Vector3D... vectors) {\r\n        for (var vector : vectors) {\r\n            this.x += vector.x;\r\n            this.y += vector.y;\r\n            this.z += vector.z;\r\n        }\r\n    }\r\n\r\n    public void subtract(Vector3D... vectors) {\r\n        for (var vector : vectors) {\r\n            this.x -= vector.x;\r\n            this.y -= vector.y;\r\n            this.z -= vector.z;\r\n        }\r\n    }\r\n\r\n    public void multiply(double multiplier) {\r\n        this.x *= multiplier;\r\n        this.y *= multiplier;\r\n        this.z *= multiplier;\r\n    }\r\n\r\n    public double magnitude() {\r\n        return Math.sqrt((this.x * this.x) + (this.y * this.y) + (this.z * this.z));\r\n    }\r\n\r\n    public double distance(Vector3D v) {\r\n        return Math.sqrt(Math.pow(this.x - v.x, 2) + Math.pow(this.y - v.y, 2) + Math.pow(this.z - v.z, 2));\r\n    }\r\n\r\n    public void negate() {\r\n        this.x = -this.x;\r\n        this.y = -this.y;\r\n        this.z = -this.z;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"x: \" + x + \" y: \" + y + \" z: \" + z;\r\n    }\r\n\r\n    @Override\r\n    public boolean equals(Object obj) {\r\n        if (this == obj) {\r\n            return true;\r\n        }\r\n        if (obj == null || getClass() != obj.getClass()) {\r\n            return false;\r\n        }\r\n        Vector3D vector3D = (Vector3D) obj;\r\n        return Double.compare(vector3D.x, x) == 0 && Double.compare(vector3D.y, y) == 0 && Double.compare(vector3D.z, z) == 0;\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/com/coolawesome/integrativeproject/utils/Vector3D.java b/src/main/java/com/coolawesome/integrativeproject/utils/Vector3D.java
---- a/src/main/java/com/coolawesome/integrativeproject/utils/Vector3D.java	(revision e63e8417e4a4a520ae7b1f8c454f7228707e5d1b)
-+++ b/src/main/java/com/coolawesome/integrativeproject/utils/Vector3D.java	(date 1712062269868)
-@@ -19,6 +19,12 @@
-         this.z = 0;
-     }
- 
-+    public Vector3D(Vector3D otherVector) {
-+        this.x = otherVector.x;
-+        this.y = otherVector.y;
-+        this.z = otherVector.z;
-+    }
-+
-     public static Vector3D sum(Vector3D... vectors) {
-         double x = 0;
-         double y = 0;
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_8_41_a_m___Changes_.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_8_41_a_m___Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_8_41_a_m___Changes_.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_8_41_a_m___Changes_.xml	(revision e63e8417e4a4a520ae7b1f8c454f7228707e5d1b)
-+++ /dev/null	(revision e63e8417e4a4a520ae7b1f8c454f7228707e5d1b)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_2024-03-19_8_41_a_m__[Changes]" date="1710852121388" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_8_41_a_m__[Changes]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2024-03-19 8:41 a.m. [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_8_55_a_m___Changes_.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_8_55_a_m___Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_8_55_a_m___Changes_.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_8_55_a_m___Changes_.xml	(revision e63e8417e4a4a520ae7b1f8c454f7228707e5d1b)
-+++ /dev/null	(revision e63e8417e4a4a520ae7b1f8c454f7228707e5d1b)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_2024-03-19_8_55_a_m__[Changes]" date="1710852916257" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_8_55_a_m__[Changes]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2024-03-19 8:55 a.m. [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_8_55_a_m__[Changes]/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_8_55_a_m__[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_8_55_a_m__[Changes]/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_8_55_a_m__[Changes]/shelved.patch	(revision e63e8417e4a4a520ae7b1f8c454f7228707e5d1b)
-+++ /dev/null	(revision e63e8417e4a4a520ae7b1f8c454f7228707e5d1b)
-@@ -1,261 +0,0 @@
--Index: src/main/java/com/coolawesome/integrativeproject/Simulation.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.coolawesome.integrativeproject;\r\n\r\nimport com.coolawesome.integrativeproject.utils.Vector3D;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.scene.paint.Color;\r\n\r\nimport java.util.*;\r\n\r\npublic class Simulation {\r\n\r\n    Map<String, Planet> planetMap = new HashMap<>();\r\n    SimulationView simulationView;\r\n\r\n    public Simulation(AnchorPane viewport) {\r\n        simulationView = new SimulationView(viewport, planetMap);\r\n        initialize(100);\r\n    }\r\n\r\n    public void initialize(int numOfBodies) {\r\n        for (int i = 0; i < numOfBodies; i++) {\r\n\r\n            // Randomizing parameters\r\n            Vector3D randPos = new Vector3D(Math.random() * 300 - 150, Math.random() * 300 - 150, Math.random() * 300 - 150);\r\n            // Vector3D randVel = new Vector3D(-1 + Math.random() * 2, -1 + Math.random() * 2, -1 + Math.random() * 2);\r\n            Vector3D randVel = new Vector3D();\r\n            double randRad = 1 + Math.random() * 2;\r\n            double randMass = 5000;\r\n            boolean sun = Math.random() * 4 < 1;\r\n\r\n            // Generate a unique ID for the planet\r\n            String uniqueID = UUID.randomUUID().toString().replaceAll(\"-\", \"\");\r\n\r\n            // Create the Planet object\r\n            Planet randPlanet = new Planet(randPos, randVel, randRad, randMass, sun);\r\n\r\n            // Add the Planet to the Map\r\n            planetMap.put(uniqueID, randPlanet);\r\n        }\r\n        planetMap.put(\"sun\", new Planet(new Vector3D(5000, 0, 0), new Vector3D(), 1000, 100000, true));\r\n    }\r\n\r\n    public void update(double dt){\r\n        // Do physics n shit here\r\n        updatePosition(dt);\r\n\r\n        handleCollisions();\r\n        simulationView.update(dt);\r\n\r\n        \r\n    }\r\n\r\n    private void updatePosition(double dt) {\r\n\r\n        double G = 0.001;\r\n\r\n        planetMap.forEach((id, p1) -> {\r\n            Vector3D ftotal = new Vector3D();\r\n            planetMap.forEach((id2, p2) -> {\r\n                if (p1 != p2) {\r\n                    Vector3D dist = Vector3D.difference(p2.position, p1.position);\r\n                    Vector3D f = Vector3D.multiplication((G * p1.mass * p2.mass) / (dist.magnitude() * dist.magnitude()), Vector3D.unitVector(dist));\r\n                    ftotal.add(f);\r\n\r\n                }\r\n\r\n                p1.acceleration = Vector3D.multiplication((1 / p1.mass), ftotal);\r\n                p1.velocity.add(Vector3D.multiplication(dt, p1.acceleration));\r\n                p1.position.add(Vector3D.multiplication(dt, p1.velocity));\r\n            });\r\n        });\r\n    }\r\n\r\n    private void handleCollisions() {\r\n        List<String> idPlanetsToRemove = new ArrayList<>();\r\n        planetMap.forEach((id, p1) -> {\r\n            planetMap.forEach((id2, p2) -> {\r\n                if (p1 != p2 && p1 != null && p2 != null) {\r\n                    Vector3D n = Vector3D.unitVector(Vector3D.difference(p1.position, p2.position));\r\n                    double dist = Math.min(Vector3D.sum(Vector3D.difference(p2.position, Vector3D.multiplication(p2.radius, n)), p1.position).magnitude(), Vector3D.difference(Vector3D.difference(p2.position, Vector3D.multiplication(p2.radius, n)), p1.position).magnitude());\r\n                    if (p1.radius > dist) {\r\n                        p1.mass += p2.mass;\r\n                        p1.radius = Math.sqrt(p1.radius * p1.radius + p2.radius * p2.radius);\r\n                        double totalMass = p1.mass + p2.mass;\r\n                        int red = (int)Math.min(((p1.mass/totalMass)*p1.color.getRed() + (p2.mass/totalMass)*p2.color.getRed())*255,255);\r\n                        int green = (int)Math.min(((p1.mass/totalMass)*p1.color.getGreen() + (p2.mass/totalMass)*p2.color.getGreen())*255,255);\r\n                        int blue = (int)Math.min(((p1.mass/totalMass)*p1.color.getBlue() + (p2.mass/totalMass)*p2.color.getBlue())*255,255);\r\n\r\n                        p1.color = Color.rgb(red, green, blue);\r\n                        idPlanetsToRemove.add(id2);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        idPlanetsToRemove.forEach((id) -> planetMap.remove(id));\r\n//        planetMap.remove(idPlanetsToRemove);\r\n    }\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/com/coolawesome/integrativeproject/Simulation.java b/src/main/java/com/coolawesome/integrativeproject/Simulation.java
----- a/src/main/java/com/coolawesome/integrativeproject/Simulation.java	(revision a8af4b295985b14938568c637b629389eecd0b39)
--+++ b/src/main/java/com/coolawesome/integrativeproject/Simulation.java	(date 1710852117794)
--@@ -13,7 +13,7 @@
-- 
--     public Simulation(AnchorPane viewport) {
--         simulationView = new SimulationView(viewport, planetMap);
---        initialize(100);
--+        initialize(400);
--     }
-- 
--     public void initialize(int numOfBodies) {
--@@ -36,14 +36,13 @@
--             // Add the Planet to the Map
--             planetMap.put(uniqueID, randPlanet);
--         }
---        planetMap.put("sun", new Planet(new Vector3D(5000, 0, 0), new Vector3D(), 1000, 100000, true));
--     }
-- 
--     public void update(double dt){
--         // Do physics n shit here
--         updatePosition(dt);
-- 
---        handleCollisions();
--+//        handleCollisions();
--         simulationView.update(dt);
-- 
--         
--@@ -51,7 +50,7 @@
-- 
--     private void updatePosition(double dt) {
-- 
---        double G = 0.001;
--+        double G = 0.00001;
-- 
--         planetMap.forEach((id, p1) -> {
--             Vector3D ftotal = new Vector3D();
--Index: src/main/java/com/coolawesome/integrativeproject/Planet.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.coolawesome.integrativeproject;\r\n\r\nimport com.coolawesome.integrativeproject.utils.Vector3D;\r\nimport javafx.geometry.Point3D;\r\nimport javafx.scene.PointLight;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.paint.PhongMaterial;\r\nimport javafx.scene.shape.Sphere;\r\n\r\n\r\npublic class Planet {\r\n\r\n    public Vector3D position;\r\n    public Vector3D velocity;\r\n    public Vector3D acceleration;\r\n    public double radius;\r\n    public double mass;\r\n    public double spinRate;\r\n    public Color color;\r\n    public PhongMaterial material;\r\n\r\n    public boolean isSun;\r\n    public PointLight sunLight;\r\n\r\n    private static final Image sunTexture = new Image(\"file:src/main/resources/images/planets/sun.jpg\");\r\n    private static final Image[] planetTextures = {\r\n        new Image(\"file:src/main/resources/images/planets/Alpine.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Gaseous1.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Gaseous2.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Gaseous3.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Gaseous4.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Icy.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Martian.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Savannah.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Swamp.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Terrestrial1.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Terrestrial2.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Terrestrial3.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Terrestrial4.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Tropical.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Venusian.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Volcanic.png\")\r\n};\r\n    public Sphere planetNode;\r\n\r\n    // TODO: planets rings using FXyz torus?\r\n    public Planet(Vector3D position, Vector3D velocity, double radius, double mass, boolean isSun) {\r\n        this.position = position;\r\n        this.velocity = velocity;\r\n        this.acceleration = new Vector3D();\r\n        this.mass = mass;\r\n        this.radius = radius;\r\n        int r = (int) (Math.random() * 155) + 100;\r\n        int g = (int) (Math.random() * 155) + 100;\r\n        int b = (int) (Math.random() * 155) + 100;\r\n        Color randColor = Color.rgb(r, g, b);\r\n        this.color = randColor;\r\n        this.spinRate = -1.5 + (Math.random() * 3);\r\n        this.isSun = isSun;\r\n\r\n        planetNode = new Sphere(radius);\r\n        planetNode.setTranslateX(position.x);\r\n        planetNode.setTranslateY(position.y);\r\n        planetNode.setTranslateZ(position.z);\r\n        material = new PhongMaterial(color);\r\n        if(isSun){\r\n            initSun();\r\n        } else {\r\n            initSphere();\r\n        }\r\n    }\r\n\r\n    private void initSphere() {\r\n        material.setDiffuseMap(planetTextures[(int) (Math.random() * planetTextures.length)]);\r\n        planetNode.setMaterial(material);\r\n        planetNode.setRotationAxis(new Point3D(0, 1, 0));\r\n    }\r\n\r\n    private void initSun(){\r\n        material.setSelfIlluminationMap(sunTexture); //TODO: add more sun textures\r\n        material.setDiffuseColor(Color.BLACK);\r\n        material.setSpecularPower(0);\r\n        planetNode.setMaterial(material);\r\n        planetNode.setRotationAxis(new Point3D(0, 1, 0));\r\n        sunLight = new PointLight(this.color);\r\n        sunLight.setTranslateX(this.position.x);\r\n        sunLight.setTranslateY(this.position.y);\r\n        sunLight.setTranslateZ(this.position.z);\r\n    }\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/com/coolawesome/integrativeproject/Planet.java b/src/main/java/com/coolawesome/integrativeproject/Planet.java
----- a/src/main/java/com/coolawesome/integrativeproject/Planet.java	(revision a8af4b295985b14938568c637b629389eecd0b39)
--+++ b/src/main/java/com/coolawesome/integrativeproject/Planet.java	(date 1710852117807)
--@@ -25,23 +25,23 @@
-- 
--     private static final Image sunTexture = new Image("file:src/main/resources/images/planets/sun.jpg");
--     private static final Image[] planetTextures = {
---        new Image("file:src/main/resources/images/planets/Alpine.png"),
---        new Image("file:src/main/resources/images/planets/Gaseous1.png"),
---        new Image("file:src/main/resources/images/planets/Gaseous2.png"),
---        new Image("file:src/main/resources/images/planets/Gaseous3.png"),
---        new Image("file:src/main/resources/images/planets/Gaseous4.png"),
---        new Image("file:src/main/resources/images/planets/Icy.png"),
---        new Image("file:src/main/resources/images/planets/Martian.png"),
---        new Image("file:src/main/resources/images/planets/Savannah.png"),
---        new Image("file:src/main/resources/images/planets/Swamp.png"),
---        new Image("file:src/main/resources/images/planets/Terrestrial1.png"),
---        new Image("file:src/main/resources/images/planets/Terrestrial2.png"),
---        new Image("file:src/main/resources/images/planets/Terrestrial3.png"),
---        new Image("file:src/main/resources/images/planets/Terrestrial4.png"),
---        new Image("file:src/main/resources/images/planets/Tropical.png"),
---        new Image("file:src/main/resources/images/planets/Venusian.png"),
---        new Image("file:src/main/resources/images/planets/Volcanic.png")
---};
--+            new Image("file:src/main/resources/images/planets/Alpine.png"),
--+            new Image("file:src/main/resources/images/planets/Gaseous1.png"),
--+            new Image("file:src/main/resources/images/planets/Gaseous2.png"),
--+            new Image("file:src/main/resources/images/planets/Gaseous3.png"),
--+            new Image("file:src/main/resources/images/planets/Gaseous4.png"),
--+            new Image("file:src/main/resources/images/planets/Icy.png"),
--+            new Image("file:src/main/resources/images/planets/Martian.png"),
--+            new Image("file:src/main/resources/images/planets/Savannah.png"),
--+            new Image("file:src/main/resources/images/planets/Swamp.png"),
--+            new Image("file:src/main/resources/images/planets/Terrestrial1.png"),
--+            new Image("file:src/main/resources/images/planets/Terrestrial2.png"),
--+            new Image("file:src/main/resources/images/planets/Terrestrial3.png"),
--+            new Image("file:src/main/resources/images/planets/Terrestrial4.png"),
--+            new Image("file:src/main/resources/images/planets/Tropical.png"),
--+            new Image("file:src/main/resources/images/planets/Venusian.png"),
--+            new Image("file:src/main/resources/images/planets/Volcanic.png")
--+    };
--     public Sphere planetNode;
-- 
--     // TODO: planets rings using FXyz torus?
--@@ -51,10 +51,8 @@
--         this.acceleration = new Vector3D();
--         this.mass = mass;
--         this.radius = radius;
---        int r = (int) (Math.random() * 155) + 100;
---        int g = (int) (Math.random() * 155) + 100;
---        int b = (int) (Math.random() * 155) + 100;
---        Color randColor = Color.rgb(r, g, b);
--+        double hue = Math.random() * 360;
--+        Color randColor = Color.hsb(hue, 1,1);
--         this.color = randColor;
--         this.spinRate = -1.5 + (Math.random() * 3);
--         this.isSun = isSun;
--@@ -64,7 +62,7 @@
--         planetNode.setTranslateY(position.y);
--         planetNode.setTranslateZ(position.z);
--         material = new PhongMaterial(color);
---        if(isSun){
--+        if (isSun) {
--             initSun();
--         } else {
--             initSphere();
--@@ -77,7 +75,7 @@
--         planetNode.setRotationAxis(new Point3D(0, 1, 0));
--     }
-- 
---    private void initSun(){
--+    private void initSun() {
--         material.setSelfIlluminationMap(sunTexture); //TODO: add more sun textures
--         material.setDiffuseColor(Color.BLACK);
--         material.setSpecularPower(0);
--Index: .idea/compiler.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <annotationProcessing>\r\n      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\r\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\r\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\r\n        <outputRelativeToContentRoot value=\"true\" />\r\n        <module name=\"IntegrativeProject\" />\r\n      </profile>\r\n    </annotationProcessing>\r\n  </component>\r\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/.idea/compiler.xml b/.idea/compiler.xml
----- a/.idea/compiler.xml	(revision a8af4b295985b14938568c637b629389eecd0b39)
--+++ b/.idea/compiler.xml	(date 1710852117827)
--@@ -2,6 +2,7 @@
-- <project version="4">
--   <component name="CompilerConfiguration">
--     <annotationProcessing>
--+      <profile default="true" name="Default" enabled="true" />
--       <profile name="Maven default annotation processors profile" enabled="true">
--         <sourceOutputDir name="target/generated-sources/annotations" />
--         <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
--Index: .idea/workspace.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"fba92d50-62dc-4990-8ff1-7a3c8ce63cbd\" name=\"Changes\" comment=\"PID Controller\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/com/coolawesome/integrativeproject/utils/Constants.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/coolawesome/integrativeproject/MainApplication.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/coolawesome/integrativeproject/MainApplication.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/coolawesome/integrativeproject/MainController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/coolawesome/integrativeproject/MainController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/coolawesome/integrativeproject/Simulation.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/coolawesome/integrativeproject/Simulation.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/coolawesome/integrativeproject/main-view.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/coolawesome/integrativeproject/main-view.fxml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2cdcgiNguDxJSrbrktXF9cZBqiO\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\r\n    \"Application.MainApplication.executor\": \"Run\",\r\n    \"Downloaded.Files.Path.Enabled\": \"false\",\r\n    \"JUnit.PIDControllerTest (1).executor\": \"Run\",\r\n    \"JUnit.PIDControllerTest.executor\": \"Run\",\r\n    \"JUnit.Vector3DTest.executor\": \"Run\",\r\n    \"Repository.Attach.Annotations\": \"false\",\r\n    \"Repository.Attach.JavaDocs\": \"false\",\r\n    \"Repository.Attach.Sources\": \"false\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"git-widget-placeholder\": \"main\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/HP USER/Documents/CP4/IntegrativeProject/src/main/resources/images/utils\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"Modules\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.3586207\",\r\n    \"settings.editor.selected.configurable\": \"reference.projectsettings.compiler.annotationProcessors\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"com.coolawesome.integrativeproject\" />\r\n    </key>\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\HP USER\\Documents\\CP4\\IntegrativeProject\\src\\main\\resources\\images\\utils\" />\r\n      <recent name=\"C:\\Users\\HP USER\\Documents\\CP4\\IntegrativeProject\\src\\main\\resources\\images\\planets\" />\r\n      <recent name=\"C:\\Users\\HP USER\\Documents\\CP4\\IntegrativeProject\\src\\main\\resources\\images\\util\" />\r\n      <recent name=\"C:\\Users\\HP USER\\Documents\\CP4\\IntegrativeProject\\src\\main\\resources\\images\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\HP USER\\Documents\\CP4\\IntegrativeProject\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"com.coolawesome.integrativeproject\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.MainApplication\">\r\n    <configuration name=\"MainApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.coolawesome.integrativeproject.MainApplication\" />\r\n      <module name=\"IntegrativeProject\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.coolawesome.integrativeproject.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"PIDControllerTest (1)\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"IntegrativeProject\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.coolawesome.integrativeproject.utils.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.coolawesome.integrativeproject.utils\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.coolawesome.integrativeproject.utils.PIDControllerTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"PIDControllerTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"IntegrativeProject\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"PIDControllerTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Vector3DTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"IntegrativeProject\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.coolawesome.integrativeproject.utils.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.coolawesome.integrativeproject.utils\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.coolawesome.integrativeproject.utils.Vector3DTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.MainApplication\" />\r\n        <item itemvalue=\"JUnit.Vector3DTest\" />\r\n        <item itemvalue=\"JUnit.PIDControllerTest (1)\" />\r\n        <item itemvalue=\"JUnit.PIDControllerTest\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-18.0.2-corretto-18.0.2-4caba194b151-5720f15e\" />\r\n        <option value=\"jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"fba92d50-62dc-4990-8ff1-7a3c8ce63cbd\" name=\"Changes\" comment=\"\" />\r\n      <created>1708445009551</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1708445009551</updated>\r\n      <workItem from=\"1708445010876\" duration=\"779000\" />\r\n      <workItem from=\"1708446744257\" duration=\"1592000\" />\r\n      <workItem from=\"1708455491268\" duration=\"6292000\" />\r\n      <workItem from=\"1708476819818\" duration=\"10118000\" />\r\n      <workItem from=\"1708536311414\" duration=\"2755000\" />\r\n      <workItem from=\"1708616275169\" duration=\"245000\" />\r\n      <workItem from=\"1708617997869\" duration=\"623000\" />\r\n      <workItem from=\"1708618960749\" duration=\"2139000\" />\r\n      <workItem from=\"1708628275102\" duration=\"6226000\" />\r\n      <workItem from=\"1708634687839\" duration=\"76000\" />\r\n      <workItem from=\"1708644025355\" duration=\"1397000\" />\r\n      <workItem from=\"1708807439090\" duration=\"2518000\" />\r\n      <workItem from=\"1708810059219\" duration=\"247000\" />\r\n      <workItem from=\"1709043765217\" duration=\"3107000\" />\r\n      <workItem from=\"1709050676418\" duration=\"123000\" />\r\n      <workItem from=\"1709818226495\" duration=\"229000\" />\r\n      <workItem from=\"1709818507396\" duration=\"3125000\" />\r\n      <workItem from=\"1709841147721\" duration=\"3208000\" />\r\n      <workItem from=\"1709865313852\" duration=\"1382000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Setup Project\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708445544700</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708445544700</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Setup Project\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708445714666</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708445714666</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Setup\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708448327820</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708448327821</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Initial 3D Scene Creation + Lombok Install\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708461096889</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708461096889</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Camera overhaul + Skybox\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708584875490</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708584875491</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Sunlight added\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708633997936</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708633997936</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Texture Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709047547859</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709047547859</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"PID Controller\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709844106736</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709844106736</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"9\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"Setup Project\" />\r\n    <MESSAGE value=\"Setup\" />\r\n    <MESSAGE value=\"Initial 3D Scene Creation + Lombok Install\" />\r\n    <MESSAGE value=\"Camera overhaul + Skybox\" />\r\n    <MESSAGE value=\"Sunlight added\" />\r\n    <MESSAGE value=\"Texture Changes\" />\r\n    <MESSAGE value=\"PID Controller\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"PID Controller\" />\r\n  </component>\r\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/.idea/workspace.xml b/.idea/workspace.xml
----- a/.idea/workspace.xml	(revision a8af4b295985b14938568c637b629389eecd0b39)
--+++ b/.idea/workspace.xml	(date 1710852909790)
--@@ -5,12 +5,11 @@
--   </component>
--   <component name="ChangeListManager">
--     <list default="true" id="fba92d50-62dc-4990-8ff1-7a3c8ce63cbd" name="Changes" comment="PID Controller">
---      <change afterPath="$PROJECT_DIR$/src/main/java/com/coolawesome/integrativeproject/utils/Constants.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
--       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/java/com/coolawesome/integrativeproject/MainApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/coolawesome/integrativeproject/MainApplication.java" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/java/com/coolawesome/integrativeproject/MainController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/coolawesome/integrativeproject/MainController.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/com/coolawesome/integrativeproject/Planet.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/coolawesome/integrativeproject/Planet.java" afterDir="false" />
--       <change beforePath="$PROJECT_DIR$/src/main/java/com/coolawesome/integrativeproject/Simulation.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/coolawesome/integrativeproject/Simulation.java" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/resources/com/coolawesome/integrativeproject/main-view.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/coolawesome/integrativeproject/main-view.fxml" afterDir="false" />
--     </list>
--     <option name="SHOW_DIALOG" value="false" />
--     <option name="HIGHLIGHT_CONFLICTS" value="true" />
--@@ -48,37 +47,37 @@
--     <option name="hideEmptyMiddlePackages" value="true" />
--     <option name="showLibraryContents" value="true" />
--   </component>
---  <component name="PropertiesComponent"><![CDATA[{
---  "keyToString": {
---    "ASKED_ADD_EXTERNAL_FILES": "true",
---    "Application.MainApplication.executor": "Run",
---    "Downloaded.Files.Path.Enabled": "false",
---    "JUnit.PIDControllerTest (1).executor": "Run",
---    "JUnit.PIDControllerTest.executor": "Run",
---    "JUnit.Vector3DTest.executor": "Run",
---    "Repository.Attach.Annotations": "false",
---    "Repository.Attach.JavaDocs": "false",
---    "Repository.Attach.Sources": "false",
---    "RunOnceActivity.OpenProjectViewOnStart": "true",
---    "RunOnceActivity.ShowReadmeOnStart": "true",
---    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
---    "WebServerToolWindowFactoryState": "false",
---    "git-widget-placeholder": "main",
---    "ignore.virus.scanning.warn.message": "true",
---    "kotlin-language-version-configured": "true",
---    "last_opened_file_path": "C:/Users/HP USER/Documents/CP4/IntegrativeProject/src/main/resources/images/utils",
---    "node.js.detected.package.eslint": "true",
---    "node.js.detected.package.tslint": "true",
---    "node.js.selected.package.eslint": "(autodetect)",
---    "node.js.selected.package.tslint": "(autodetect)",
---    "nodejs_package_manager_path": "npm",
---    "project.structure.last.edited": "Modules",
---    "project.structure.proportion": "0.15",
---    "project.structure.side.proportion": "0.3586207",
---    "settings.editor.selected.configurable": "reference.projectsettings.compiler.annotationProcessors",
---    "vue.rearranger.settings.migration": "true"
--+  <component name="PropertiesComponent">{
--+  &quot;keyToString&quot;: {
--+    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
--+    &quot;Application.MainApplication.executor&quot;: &quot;Run&quot;,
--+    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,
--+    &quot;JUnit.PIDControllerTest (1).executor&quot;: &quot;Run&quot;,
--+    &quot;JUnit.PIDControllerTest.executor&quot;: &quot;Run&quot;,
--+    &quot;JUnit.Vector3DTest.executor&quot;: &quot;Run&quot;,
--+    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,
--+    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,
--+    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,
--+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
--+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
--+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
--+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
--+    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
--+    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
--+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
--+    &quot;last_opened_file_path&quot;: &quot;C:/Users/HP USER/Documents/CP4/IntegrativeProject/src/main/resources/images/utils&quot;,
--+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
--+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
--+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
--+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
--+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
--+    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
--+    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
--+    &quot;project.structure.side.proportion&quot;: &quot;0.3586207&quot;,
--+    &quot;settings.editor.selected.configurable&quot;: &quot;reference.projectsettings.compiler.annotationProcessors&quot;,
--+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
--   }
---}]]></component>
--+}</component>
--   <component name="RecentsManager">
--     <key name="CreateClassDialog.RecentsKey">
--       <recent name="com.coolawesome.integrativeproject" />
--@@ -193,6 +192,7 @@
--       <workItem from="1709818507396" duration="3125000" />
--       <workItem from="1709841147721" duration="3208000" />
--       <workItem from="1709865313852" duration="1382000" />
--+      <workItem from="1710852026816" duration="879000" />
--     </task>
--     <task id="LOCAL-00001" summary="Setup Project">
--       <option name="closed" value="true" />
--Index: .idea/misc.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n    <option name=\"workspaceImportForciblyTurnedOn\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_21\" default=\"true\" project-jdk-name=\"openjdk-21\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/.idea/misc.xml b/.idea/misc.xml
----- a/.idea/misc.xml	(revision a8af4b295985b14938568c637b629389eecd0b39)
--+++ b/.idea/misc.xml	(date 1710852121360)
--@@ -1,4 +1,3 @@
---<?xml version="1.0" encoding="UTF-8"?>
-- <project version="4">
--   <component name="ExternalStorageConfigurationManager" enabled="true" />
--   <component name="MavenProjectsManager">
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_8_41_a_m__[Changes]/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_8_41_a_m__[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_8_41_a_m__[Changes]/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_8_41_a_m__[Changes]/shelved.patch	(revision e63e8417e4a4a520ae7b1f8c454f7228707e5d1b)
-+++ /dev/null	(revision e63e8417e4a4a520ae7b1f8c454f7228707e5d1b)
-@@ -1,266 +0,0 @@
--Index: src/main/java/com/coolawesome/integrativeproject/Simulation.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.coolawesome.integrativeproject;\r\n\r\nimport com.coolawesome.integrativeproject.utils.Vector3D;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.scene.paint.Color;\r\n\r\nimport java.util.*;\r\n\r\npublic class Simulation {\r\n\r\n    Map<String, Planet> planetMap = new HashMap<>();\r\n    SimulationView simulationView;\r\n\r\n    public Simulation(AnchorPane viewport) {\r\n        simulationView = new SimulationView(viewport, planetMap);\r\n        initialize(100);\r\n    }\r\n\r\n    public void initialize(int numOfBodies) {\r\n        for (int i = 0; i < numOfBodies; i++) {\r\n\r\n            // Randomizing parameters\r\n            Vector3D randPos = new Vector3D(Math.random() * 300 - 150, Math.random() * 300 - 150, Math.random() * 300 - 150);\r\n            // Vector3D randVel = new Vector3D(-1 + Math.random() * 2, -1 + Math.random() * 2, -1 + Math.random() * 2);\r\n            Vector3D randVel = new Vector3D();\r\n            double randRad = 1 + Math.random() * 2;\r\n            double randMass = 5000;\r\n            boolean sun = Math.random() * 4 < 1;\r\n\r\n            // Generate a unique ID for the planet\r\n            String uniqueID = UUID.randomUUID().toString().replaceAll(\"-\", \"\");\r\n\r\n            // Create the Planet object\r\n            Planet randPlanet = new Planet(randPos, randVel, randRad, randMass, sun);\r\n\r\n            // Add the Planet to the Map\r\n            planetMap.put(uniqueID, randPlanet);\r\n        }\r\n        planetMap.put(\"sun\", new Planet(new Vector3D(5000, 0, 0), new Vector3D(), 1000, 100000, true));\r\n    }\r\n\r\n    public void update(double dt){\r\n        // Do physics n shit here\r\n        updatePosition(dt);\r\n\r\n        handleCollisions();\r\n        simulationView.update(dt);\r\n\r\n\r\n    }\r\n\r\n    private void updatePosition(double dt) {\r\n\r\n        double G = 0.001;\r\n\r\n        planetMap.forEach((id, p1) -> {\r\n            Vector3D ftotal = new Vector3D();\r\n            planetMap.forEach((id2, p2) -> {\r\n                if (p1 != p2) {\r\n                    Vector3D dist = Vector3D.difference(p2.position, p1.position);\r\n                    Vector3D f = Vector3D.multiplication((G * p1.mass * p2.mass) / (dist.magnitude() * dist.magnitude()), Vector3D.unitVector(dist));\r\n                    ftotal.add(f);\r\n\r\n                }\r\n\r\n                p1.acceleration = Vector3D.multiplication((1 / p1.mass), ftotal);\r\n                p1.velocity.add(Vector3D.multiplication(dt, p1.acceleration));\r\n                p1.position.add(Vector3D.multiplication(dt, p1.velocity));\r\n            });\r\n        });\r\n    }\r\n\r\n    private void handleCollisions() {\r\n        List<String> idPlanetsToRemove = new ArrayList<>();\r\n        planetMap.forEach((id, p1) -> {\r\n            planetMap.forEach((id2, p2) -> {\r\n                if (p1 != p2 && p1 != null && p2 != null) {\r\n                    Vector3D n = Vector3D.unitVector(Vector3D.difference(p1.position, p2.position));\r\n                    double dist = Math.min(Vector3D.sum(Vector3D.difference(p2.position, Vector3D.multiplication(p2.radius, n)), p1.position).magnitude(), Vector3D.difference(Vector3D.difference(p2.position, Vector3D.multiplication(p2.radius, n)), p1.position).magnitude());\r\n                    if (p1.radius > dist) {\r\n                        p1.mass += p2.mass;\r\n                        p1.radius = Math.sqrt(p1.radius * p1.radius + p2.radius * p2.radius);\r\n                        double totalMass = p1.mass + p2.mass;\r\n                        int red = (int)Math.min(((p1.mass/totalMass)*p1.color.getRed() + (p2.mass/totalMass)*p2.color.getRed())*255,255);\r\n                        int green = (int)Math.min(((p1.mass/totalMass)*p1.color.getGreen() + (p2.mass/totalMass)*p2.color.getGreen())*255,255);\r\n                        int blue = (int)Math.min(((p1.mass/totalMass)*p1.color.getBlue() + (p2.mass/totalMass)*p2.color.getBlue())*255,255);\r\n\r\n                        p1.color = Color.rgb(red, green, blue);\r\n                        idPlanetsToRemove.add(id2);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        idPlanetsToRemove.forEach((id) -> planetMap.remove(id));\r\n//        planetMap.remove(idPlanetsToRemove);\r\n    }\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/com/coolawesome/integrativeproject/Simulation.java b/src/main/java/com/coolawesome/integrativeproject/Simulation.java
----- a/src/main/java/com/coolawesome/integrativeproject/Simulation.java	(revision a4c793681ac83e05efb18d40ef611d154ee106d0)
--+++ b/src/main/java/com/coolawesome/integrativeproject/Simulation.java	(date 1710766623620)
--@@ -13,7 +13,7 @@
-- 
--     public Simulation(AnchorPane viewport) {
--         simulationView = new SimulationView(viewport, planetMap);
---        initialize(100);
--+        initialize(400);
--     }
-- 
--     public void initialize(int numOfBodies) {
--@@ -36,14 +36,13 @@
--             // Add the Planet to the Map
--             planetMap.put(uniqueID, randPlanet);
--         }
---        planetMap.put("sun", new Planet(new Vector3D(5000, 0, 0), new Vector3D(), 1000, 100000, true));
--     }
-- 
--     public void update(double dt){
--         // Do physics n shit here
--         updatePosition(dt);
-- 
---        handleCollisions();
--+//        handleCollisions();
--         simulationView.update(dt);
-- 
-- 
--@@ -51,7 +50,7 @@
-- 
--     private void updatePosition(double dt) {
-- 
---        double G = 0.001;
--+        double G = 0.00001;
-- 
--         planetMap.forEach((id, p1) -> {
--             Vector3D ftotal = new Vector3D();
--Index: src/main/java/com/coolawesome/integrativeproject/Planet.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.coolawesome.integrativeproject;\r\n\r\nimport com.coolawesome.integrativeproject.utils.Vector3D;\r\nimport javafx.geometry.Point3D;\r\nimport javafx.scene.PointLight;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.paint.PhongMaterial;\r\nimport javafx.scene.shape.Sphere;\r\n\r\n\r\npublic class Planet {\r\n\r\n    public Vector3D position;\r\n    public Vector3D velocity;\r\n    public Vector3D acceleration;\r\n    public double radius;\r\n    public double mass;\r\n    public double spinRate;\r\n    public Color color;\r\n    public PhongMaterial material;\r\n\r\n    public boolean isSun;\r\n    public PointLight sunLight;\r\n\r\n    private static final Image sunTexture = new Image(\"file:src/main/resources/images/planets/sun.jpg\");\r\n    private static final Image[] planetTextures = {\r\n        new Image(\"file:src/main/resources/images/planets/Alpine.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Gaseous1.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Gaseous2.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Gaseous3.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Gaseous4.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Icy.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Martian.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Savannah.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Swamp.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Terrestrial1.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Terrestrial2.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Terrestrial3.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Terrestrial4.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Tropical.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Venusian.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Volcanic.png\")\r\n};\r\n    public Sphere planetNode;\r\n\r\n    // TODO: planets rings using FXyz torus?\r\n    public Planet(Vector3D position, Vector3D velocity, double radius, double mass, boolean isSun) {\r\n        this.position = position;\r\n        this.velocity = velocity;\r\n        this.acceleration = new Vector3D();\r\n        this.mass = mass;\r\n        this.radius = radius;\r\n        int r = (int) (Math.random() * 155) + 100;\r\n        int g = (int) (Math.random() * 155) + 100;\r\n        int b = (int) (Math.random() * 155) + 100;\r\n        Color randColor = Color.rgb(r, g, b);\r\n        this.color = randColor;\r\n        this.spinRate = -1.5 + (Math.random() * 3);\r\n        this.isSun = isSun;\r\n\r\n        planetNode = new Sphere(radius);\r\n        planetNode.setTranslateX(position.x);\r\n        planetNode.setTranslateY(position.y);\r\n        planetNode.setTranslateZ(position.z);\r\n        material = new PhongMaterial(color);\r\n        if(isSun){\r\n            initSun();\r\n        } else {\r\n            initSphere();\r\n        }\r\n    }\r\n\r\n    private void initSphere() {\r\n        material.setDiffuseMap(planetTextures[(int) (Math.random() * planetTextures.length)]);\r\n        planetNode.setMaterial(material);\r\n        planetNode.setRotationAxis(new Point3D(0, 1, 0));\r\n    }\r\n\r\n    private void initSun(){\r\n        material.setSelfIlluminationMap(sunTexture); //TODO: add more sun textures\r\n        material.setDiffuseColor(Color.BLACK);\r\n        material.setSpecularPower(0);\r\n        planetNode.setMaterial(material);\r\n        planetNode.setRotationAxis(new Point3D(0, 1, 0));\r\n        sunLight = new PointLight(this.color);\r\n        sunLight.setTranslateX(this.position.x);\r\n        sunLight.setTranslateY(this.position.y);\r\n        sunLight.setTranslateZ(this.position.z);\r\n    }\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/com/coolawesome/integrativeproject/Planet.java b/src/main/java/com/coolawesome/integrativeproject/Planet.java
----- a/src/main/java/com/coolawesome/integrativeproject/Planet.java	(revision a4c793681ac83e05efb18d40ef611d154ee106d0)
--+++ b/src/main/java/com/coolawesome/integrativeproject/Planet.java	(date 1710766623633)
--@@ -25,23 +25,23 @@
-- 
--     private static final Image sunTexture = new Image("file:src/main/resources/images/planets/sun.jpg");
--     private static final Image[] planetTextures = {
---        new Image("file:src/main/resources/images/planets/Alpine.png"),
---        new Image("file:src/main/resources/images/planets/Gaseous1.png"),
---        new Image("file:src/main/resources/images/planets/Gaseous2.png"),
---        new Image("file:src/main/resources/images/planets/Gaseous3.png"),
---        new Image("file:src/main/resources/images/planets/Gaseous4.png"),
---        new Image("file:src/main/resources/images/planets/Icy.png"),
---        new Image("file:src/main/resources/images/planets/Martian.png"),
---        new Image("file:src/main/resources/images/planets/Savannah.png"),
---        new Image("file:src/main/resources/images/planets/Swamp.png"),
---        new Image("file:src/main/resources/images/planets/Terrestrial1.png"),
---        new Image("file:src/main/resources/images/planets/Terrestrial2.png"),
---        new Image("file:src/main/resources/images/planets/Terrestrial3.png"),
---        new Image("file:src/main/resources/images/planets/Terrestrial4.png"),
---        new Image("file:src/main/resources/images/planets/Tropical.png"),
---        new Image("file:src/main/resources/images/planets/Venusian.png"),
---        new Image("file:src/main/resources/images/planets/Volcanic.png")
---};
--+            new Image("file:src/main/resources/images/planets/Alpine.png"),
--+            new Image("file:src/main/resources/images/planets/Gaseous1.png"),
--+            new Image("file:src/main/resources/images/planets/Gaseous2.png"),
--+            new Image("file:src/main/resources/images/planets/Gaseous3.png"),
--+            new Image("file:src/main/resources/images/planets/Gaseous4.png"),
--+            new Image("file:src/main/resources/images/planets/Icy.png"),
--+            new Image("file:src/main/resources/images/planets/Martian.png"),
--+            new Image("file:src/main/resources/images/planets/Savannah.png"),
--+            new Image("file:src/main/resources/images/planets/Swamp.png"),
--+            new Image("file:src/main/resources/images/planets/Terrestrial1.png"),
--+            new Image("file:src/main/resources/images/planets/Terrestrial2.png"),
--+            new Image("file:src/main/resources/images/planets/Terrestrial3.png"),
--+            new Image("file:src/main/resources/images/planets/Terrestrial4.png"),
--+            new Image("file:src/main/resources/images/planets/Tropical.png"),
--+            new Image("file:src/main/resources/images/planets/Venusian.png"),
--+            new Image("file:src/main/resources/images/planets/Volcanic.png")
--+    };
--     public Sphere planetNode;
-- 
--     // TODO: planets rings using FXyz torus?
--@@ -51,10 +51,8 @@
--         this.acceleration = new Vector3D();
--         this.mass = mass;
--         this.radius = radius;
---        int r = (int) (Math.random() * 155) + 100;
---        int g = (int) (Math.random() * 155) + 100;
---        int b = (int) (Math.random() * 155) + 100;
---        Color randColor = Color.rgb(r, g, b);
--+        double hue = Math.random() * 360;
--+        Color randColor = Color.hsb(hue, 1,1);
--         this.color = randColor;
--         this.spinRate = -1.5 + (Math.random() * 3);
--         this.isSun = isSun;
--@@ -64,7 +62,7 @@
--         planetNode.setTranslateY(position.y);
--         planetNode.setTranslateZ(position.z);
--         material = new PhongMaterial(color);
---        if(isSun){
--+        if (isSun) {
--             initSun();
--         } else {
--             initSphere();
--@@ -77,7 +75,7 @@
--         planetNode.setRotationAxis(new Point3D(0, 1, 0));
--     }
-- 
---    private void initSun(){
--+    private void initSun() {
--         material.setSelfIlluminationMap(sunTexture); //TODO: add more sun textures
--         material.setDiffuseColor(Color.BLACK);
--         material.setSpecularPower(0);
--Index: .idea/compiler.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <annotationProcessing>\r\n      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\r\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\r\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\r\n        <outputRelativeToContentRoot value=\"true\" />\r\n        <module name=\"IntegrativeProject\" />\r\n      </profile>\r\n    </annotationProcessing>\r\n  </component>\r\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/.idea/compiler.xml b/.idea/compiler.xml
----- a/.idea/compiler.xml	(revision a4c793681ac83e05efb18d40ef611d154ee106d0)
--+++ b/.idea/compiler.xml	(date 1710766623666)
--@@ -2,6 +2,7 @@
-- <project version="4">
--   <component name="CompilerConfiguration">
--     <annotationProcessing>
--+      <profile default="true" name="Default" enabled="true" />
--       <profile name="Maven default annotation processors profile" enabled="true">
--         <sourceOutputDir name="target/generated-sources/annotations" />
--         <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
--Index: .idea/workspace.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"fba92d50-62dc-4990-8ff1-7a3c8ce63cbd\" name=\"Changes\" comment=\"PID Controller\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/test/java/com/coolawesome/integrativeproject/utils/Vector3DTest.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/coolawesome/integrativeproject/utils/Vector3D.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/coolawesome/integrativeproject/utils/Vector3D.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2cdcgiNguDxJSrbrktXF9cZBqiO\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\r\n    \"Application.MainApplication.executor\": \"Run\",\r\n    \"Downloaded.Files.Path.Enabled\": \"false\",\r\n    \"JUnit.PIDControllerTest (1).executor\": \"Run\",\r\n    \"JUnit.PIDControllerTest.executor\": \"Run\",\r\n    \"JUnit.Vector3DTest.executor\": \"Run\",\r\n    \"Repository.Attach.Annotations\": \"false\",\r\n    \"Repository.Attach.JavaDocs\": \"false\",\r\n    \"Repository.Attach.Sources\": \"false\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/HP USER/Documents/CP4/IntegrativeProject/src/main/resources/images/utils\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"Modules\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.3586207\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"com.coolawesome.integrativeproject\" />\r\n    </key>\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\HP USER\\Documents\\CP4\\IntegrativeProject\\src\\main\\resources\\images\\utils\" />\r\n      <recent name=\"C:\\Users\\HP USER\\Documents\\CP4\\IntegrativeProject\\src\\main\\resources\\images\\planets\" />\r\n      <recent name=\"C:\\Users\\HP USER\\Documents\\CP4\\IntegrativeProject\\src\\main\\resources\\images\\util\" />\r\n      <recent name=\"C:\\Users\\HP USER\\Documents\\CP4\\IntegrativeProject\\src\\main\\resources\\images\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\HP USER\\Documents\\CP4\\IntegrativeProject\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"com.coolawesome.integrativeproject\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"JUnit.Vector3DTest\">\r\n    <configuration name=\"MainApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.coolawesome.integrativeproject.MainApplication\" />\r\n      <module name=\"IntegrativeProject\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.coolawesome.integrativeproject.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"PIDControllerTest (1)\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"IntegrativeProject\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.coolawesome.integrativeproject.utils.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.coolawesome.integrativeproject.utils\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.coolawesome.integrativeproject.utils.PIDControllerTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"PIDControllerTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"IntegrativeProject\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"PIDControllerTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Vector3DTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"IntegrativeProject\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.coolawesome.integrativeproject.utils.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.coolawesome.integrativeproject.utils\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.coolawesome.integrativeproject.utils.Vector3DTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.Vector3DTest\" />\r\n        <item itemvalue=\"Application.MainApplication\" />\r\n        <item itemvalue=\"JUnit.PIDControllerTest (1)\" />\r\n        <item itemvalue=\"JUnit.PIDControllerTest\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-18.0.2-corretto-18.0.2-4caba194b151-5720f15e\" />\r\n        <option value=\"jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"fba92d50-62dc-4990-8ff1-7a3c8ce63cbd\" name=\"Changes\" comment=\"\" />\r\n      <created>1708445009551</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1708445009551</updated>\r\n      <workItem from=\"1708445010876\" duration=\"779000\" />\r\n      <workItem from=\"1708446744257\" duration=\"1592000\" />\r\n      <workItem from=\"1708455491268\" duration=\"6292000\" />\r\n      <workItem from=\"1708476819818\" duration=\"10118000\" />\r\n      <workItem from=\"1708536311414\" duration=\"2755000\" />\r\n      <workItem from=\"1708616275169\" duration=\"245000\" />\r\n      <workItem from=\"1708617997869\" duration=\"623000\" />\r\n      <workItem from=\"1708618960749\" duration=\"2139000\" />\r\n      <workItem from=\"1708628275102\" duration=\"6226000\" />\r\n      <workItem from=\"1708634687839\" duration=\"76000\" />\r\n      <workItem from=\"1708644025355\" duration=\"1397000\" />\r\n      <workItem from=\"1708807439090\" duration=\"2518000\" />\r\n      <workItem from=\"1708810059219\" duration=\"247000\" />\r\n      <workItem from=\"1709043765217\" duration=\"3107000\" />\r\n      <workItem from=\"1709050676418\" duration=\"123000\" />\r\n      <workItem from=\"1709818226495\" duration=\"229000\" />\r\n      <workItem from=\"1709818507396\" duration=\"3125000\" />\r\n      <workItem from=\"1709841147721\" duration=\"3208000\" />\r\n      <workItem from=\"1709865313852\" duration=\"1382000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Setup Project\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708445544700</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708445544700</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Setup Project\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708445714666</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708445714666</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Setup\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708448327820</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708448327821</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Initial 3D Scene Creation + Lombok Install\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708461096889</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708461096889</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Camera overhaul + Skybox\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708584875490</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708584875491</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Sunlight added\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708633997936</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708633997936</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Texture Changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709047547859</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709047547859</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"PID Controller\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709844106736</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709844106736</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"9\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"Setup Project\" />\r\n    <MESSAGE value=\"Setup\" />\r\n    <MESSAGE value=\"Initial 3D Scene Creation + Lombok Install\" />\r\n    <MESSAGE value=\"Camera overhaul + Skybox\" />\r\n    <MESSAGE value=\"Sunlight added\" />\r\n    <MESSAGE value=\"Texture Changes\" />\r\n    <MESSAGE value=\"PID Controller\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"PID Controller\" />\r\n  </component>\r\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/.idea/workspace.xml b/.idea/workspace.xml
----- a/.idea/workspace.xml	(revision a4c793681ac83e05efb18d40ef611d154ee106d0)
--+++ b/.idea/workspace.xml	(date 1710766718312)
--@@ -5,9 +5,11 @@
--   </component>
--   <component name="ChangeListManager">
--     <list default="true" id="fba92d50-62dc-4990-8ff1-7a3c8ce63cbd" name="Changes" comment="PID Controller">
---      <change afterPath="$PROJECT_DIR$/src/test/java/com/coolawesome/integrativeproject/utils/Vector3DTest.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
--       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
---      <change beforePath="$PROJECT_DIR$/src/main/java/com/coolawesome/integrativeproject/utils/Vector3D.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/coolawesome/integrativeproject/utils/Vector3D.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/com/coolawesome/integrativeproject/Planet.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/coolawesome/integrativeproject/Planet.java" afterDir="false" />
--+      <change beforePath="$PROJECT_DIR$/src/main/java/com/coolawesome/integrativeproject/Simulation.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/coolawesome/integrativeproject/Simulation.java" afterDir="false" />
--     </list>
--     <option name="SHOW_DIALOG" value="false" />
--     <option name="HIGHLIGHT_CONFLICTS" value="true" />
--@@ -45,35 +47,35 @@
--     <option name="hideEmptyMiddlePackages" value="true" />
--     <option name="showLibraryContents" value="true" />
--   </component>
---  <component name="PropertiesComponent"><![CDATA[{
---  "keyToString": {
---    "ASKED_ADD_EXTERNAL_FILES": "true",
---    "Application.MainApplication.executor": "Run",
---    "Downloaded.Files.Path.Enabled": "false",
---    "JUnit.PIDControllerTest (1).executor": "Run",
---    "JUnit.PIDControllerTest.executor": "Run",
---    "JUnit.Vector3DTest.executor": "Run",
---    "Repository.Attach.Annotations": "false",
---    "Repository.Attach.JavaDocs": "false",
---    "Repository.Attach.Sources": "false",
---    "RunOnceActivity.OpenProjectViewOnStart": "true",
---    "RunOnceActivity.ShowReadmeOnStart": "true",
---    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
---    "WebServerToolWindowFactoryState": "false",
---    "ignore.virus.scanning.warn.message": "true",
---    "kotlin-language-version-configured": "true",
---    "last_opened_file_path": "C:/Users/HP USER/Documents/CP4/IntegrativeProject/src/main/resources/images/utils",
---    "node.js.detected.package.eslint": "true",
---    "node.js.detected.package.tslint": "true",
---    "node.js.selected.package.eslint": "(autodetect)",
---    "node.js.selected.package.tslint": "(autodetect)",
---    "nodejs_package_manager_path": "npm",
---    "project.structure.last.edited": "Modules",
---    "project.structure.proportion": "0.15",
---    "project.structure.side.proportion": "0.3586207",
---    "vue.rearranger.settings.migration": "true"
--+  <component name="PropertiesComponent">{
--+  &quot;keyToString&quot;: {
--+    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
--+    &quot;Application.MainApplication.executor&quot;: &quot;Run&quot;,
--+    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,
--+    &quot;JUnit.PIDControllerTest (1).executor&quot;: &quot;Run&quot;,
--+    &quot;JUnit.PIDControllerTest.executor&quot;: &quot;Run&quot;,
--+    &quot;JUnit.Vector3DTest.executor&quot;: &quot;Run&quot;,
--+    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,
--+    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,
--+    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,
--+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
--+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
--+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
--+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
--+    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
--+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
--+    &quot;last_opened_file_path&quot;: &quot;C:/Users/HP USER/Documents/CP4/IntegrativeProject/src/main/resources/images/utils&quot;,
--+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
--+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
--+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
--+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
--+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
--+    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
--+    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
--+    &quot;project.structure.side.proportion&quot;: &quot;0.3586207&quot;,
--+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
--   }
---}]]></component>
--+}</component>
--   <component name="RecentsManager">
--     <key name="CreateClassDialog.RecentsKey">
--       <recent name="com.coolawesome.integrativeproject" />
--@@ -91,7 +93,7 @@
--       <recent name="com.coolawesome.integrativeproject" />
--     </key>
--   </component>
---  <component name="RunManager" selected="JUnit.Vector3DTest">
--+  <component name="RunManager" selected="Application.MainApplication">
--     <configuration name="MainApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
--       <option name="MAIN_CLASS_NAME" value="com.coolawesome.integrativeproject.MainApplication" />
--       <module name="IntegrativeProject" />
--@@ -146,8 +148,8 @@
--     </configuration>
--     <recent_temporary>
--       <list>
--+        <item itemvalue="Application.MainApplication" />
--         <item itemvalue="JUnit.Vector3DTest" />
---        <item itemvalue="Application.MainApplication" />
--         <item itemvalue="JUnit.PIDControllerTest (1)" />
--         <item itemvalue="JUnit.PIDControllerTest" />
--       </list>
--Index: .idea/misc.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n    <option name=\"workspaceImportForciblyTurnedOn\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_21\" default=\"true\" project-jdk-name=\"openjdk-21\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/.idea/misc.xml b/.idea/misc.xml
----- a/.idea/misc.xml	(revision a4c793681ac83e05efb18d40ef611d154ee106d0)
--+++ b/.idea/misc.xml	(date 1710766631170)
--@@ -1,4 +1,3 @@
---<?xml version="1.0" encoding="UTF-8"?>
-- <project version="4">
--   <component name="ExternalStorageConfigurationManager" enabled="true" />
--   <component name="MavenProjectsManager">
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_9_02_a_m___Changes_1.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_9_02_a_m___Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_9_02_a_m___Changes_1.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_9_02_a_m___Changes_1.xml	(revision e63e8417e4a4a520ae7b1f8c454f7228707e5d1b)
-+++ /dev/null	(revision e63e8417e4a4a520ae7b1f8c454f7228707e5d1b)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_2024-03-19_9_02_a_m__[Changes]1" date="1710853346951" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_9_02_a_m__[Changes]1/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2024-03-19 9:02 a.m. [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_9_02_a_m__[Changes]1/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_9_02_a_m__[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_9_02_a_m__[Changes]1/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-03-19_9_02_a_m__[Changes]1/shelved.patch	(revision e63e8417e4a4a520ae7b1f8c454f7228707e5d1b)
-+++ /dev/null	(revision e63e8417e4a4a520ae7b1f8c454f7228707e5d1b)
-@@ -1,115 +0,0 @@
--Index: .idea/compiler.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <annotationProcessing>\r\n      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\r\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\r\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\r\n        <outputRelativeToContentRoot value=\"true\" />\r\n        <module name=\"IntegrativeProject\" />\r\n      </profile>\r\n    </annotationProcessing>\r\n  </component>\r\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/.idea/compiler.xml b/.idea/compiler.xml
----- a/.idea/compiler.xml	
--+++ b/.idea/compiler.xml	
--@@ -2,6 +2,7 @@
-- <project version="4">
--   <component name="CompilerConfiguration">
--     <annotationProcessing>
--+      <profile default="true" name="Default" enabled="true" />
--       <profile name="Maven default annotation processors profile" enabled="true">
--         <sourceOutputDir name="target/generated-sources/annotations" />
--         <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
--Index: .idea/misc.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n    <option name=\"workspaceImportForciblyTurnedOn\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_21\" default=\"true\" project-jdk-name=\"openjdk-21\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/.idea/misc.xml b/.idea/misc.xml
----- a/.idea/misc.xml	
--+++ b/.idea/misc.xml	
--@@ -1,4 +1,3 @@
---<?xml version="1.0" encoding="UTF-8"?>
-- <project version="4">
--   <component name="ExternalStorageConfigurationManager" enabled="true" />
--   <component name="MavenProjectsManager">
--Index: src/main/java/com/coolawesome/integrativeproject/Planet.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.coolawesome.integrativeproject;\r\n\r\nimport com.coolawesome.integrativeproject.utils.Vector3D;\r\nimport javafx.geometry.Point3D;\r\nimport javafx.scene.PointLight;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.paint.PhongMaterial;\r\nimport javafx.scene.shape.Sphere;\r\n\r\n\r\npublic class Planet {\r\n\r\n    public Vector3D position;\r\n    public Vector3D velocity;\r\n    public Vector3D acceleration;\r\n    public double radius;\r\n    public double mass;\r\n    public double spinRate;\r\n    public Color color;\r\n    public PhongMaterial material;\r\n\r\n    public boolean isSun;\r\n    public PointLight sunLight;\r\n\r\n    private static final Image sunTexture = new Image(\"file:src/main/resources/images/planets/sun.jpg\");\r\n    private static final Image[] planetTextures = {\r\n        new Image(\"file:src/main/resources/images/planets/Alpine.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Gaseous1.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Gaseous2.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Gaseous3.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Gaseous4.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Icy.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Martian.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Savannah.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Swamp.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Terrestrial1.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Terrestrial2.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Terrestrial3.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Terrestrial4.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Tropical.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Venusian.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Volcanic.png\")\r\n};\r\n    public Sphere planetNode;\r\n\r\n    // TODO: planets rings using FXyz torus?\r\n    public Planet(Vector3D position, Vector3D velocity, double radius, double mass, boolean isSun) {\r\n        this.position = position;\r\n        this.velocity = velocity;\r\n        this.acceleration = new Vector3D();\r\n        this.mass = mass;\r\n        this.radius = radius;\r\n        int r = (int) (Math.random() * 155) + 100;\r\n        int g = (int) (Math.random() * 155) + 100;\r\n        int b = (int) (Math.random() * 155) + 100;\r\n        Color randColor = Color.rgb(r, g, b);\r\n        this.color = randColor;\r\n        this.spinRate = -1.5 + (Math.random() * 3);\r\n        this.isSun = isSun;\r\n\r\n        planetNode = new Sphere(radius);\r\n        planetNode.setTranslateX(position.x);\r\n        planetNode.setTranslateY(position.y);\r\n        planetNode.setTranslateZ(position.z);\r\n        material = new PhongMaterial(color);\r\n        if(isSun){\r\n            initSun();\r\n        } else {\r\n            initSphere();\r\n        }\r\n    }\r\n\r\n    private void initSphere() {\r\n        material.setDiffuseMap(planetTextures[(int) (Math.random() * planetTextures.length)]);\r\n        planetNode.setMaterial(material);\r\n        planetNode.setRotationAxis(new Point3D(0, 1, 0));\r\n    }\r\n\r\n    private void initSun(){\r\n        material.setSelfIlluminationMap(sunTexture); //TODO: add more sun textures\r\n        material.setDiffuseColor(Color.BLACK);\r\n        material.setSpecularPower(0);\r\n        planetNode.setMaterial(material);\r\n        planetNode.setRotationAxis(new Point3D(0, 1, 0));\r\n        sunLight = new PointLight(this.color);\r\n        sunLight.setTranslateX(this.position.x);\r\n        sunLight.setTranslateY(this.position.y);\r\n        sunLight.setTranslateZ(this.position.z);\r\n    }\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/src/main/java/com/coolawesome/integrativeproject/Planet.java b/src/main/java/com/coolawesome/integrativeproject/Planet.java
----- a/src/main/java/com/coolawesome/integrativeproject/Planet.java	
--+++ b/src/main/java/com/coolawesome/integrativeproject/Planet.java	
--@@ -25,23 +25,23 @@
-- 
--     private static final Image sunTexture = new Image("file:src/main/resources/images/planets/sun.jpg");
--     private static final Image[] planetTextures = {
---        new Image("file:src/main/resources/images/planets/Alpine.png"),
---        new Image("file:src/main/resources/images/planets/Gaseous1.png"),
---        new Image("file:src/main/resources/images/planets/Gaseous2.png"),
---        new Image("file:src/main/resources/images/planets/Gaseous3.png"),
---        new Image("file:src/main/resources/images/planets/Gaseous4.png"),
---        new Image("file:src/main/resources/images/planets/Icy.png"),
---        new Image("file:src/main/resources/images/planets/Martian.png"),
---        new Image("file:src/main/resources/images/planets/Savannah.png"),
---        new Image("file:src/main/resources/images/planets/Swamp.png"),
---        new Image("file:src/main/resources/images/planets/Terrestrial1.png"),
---        new Image("file:src/main/resources/images/planets/Terrestrial2.png"),
---        new Image("file:src/main/resources/images/planets/Terrestrial3.png"),
---        new Image("file:src/main/resources/images/planets/Terrestrial4.png"),
---        new Image("file:src/main/resources/images/planets/Tropical.png"),
---        new Image("file:src/main/resources/images/planets/Venusian.png"),
---        new Image("file:src/main/resources/images/planets/Volcanic.png")
---};
--+            new Image("file:src/main/resources/images/planets/Alpine.png"),
--+            new Image("file:src/main/resources/images/planets/Gaseous1.png"),
--+            new Image("file:src/main/resources/images/planets/Gaseous2.png"),
--+            new Image("file:src/main/resources/images/planets/Gaseous3.png"),
--+            new Image("file:src/main/resources/images/planets/Gaseous4.png"),
--+            new Image("file:src/main/resources/images/planets/Icy.png"),
--+            new Image("file:src/main/resources/images/planets/Martian.png"),
--+            new Image("file:src/main/resources/images/planets/Savannah.png"),
--+            new Image("file:src/main/resources/images/planets/Swamp.png"),
--+            new Image("file:src/main/resources/images/planets/Terrestrial1.png"),
--+            new Image("file:src/main/resources/images/planets/Terrestrial2.png"),
--+            new Image("file:src/main/resources/images/planets/Terrestrial3.png"),
--+            new Image("file:src/main/resources/images/planets/Terrestrial4.png"),
--+            new Image("file:src/main/resources/images/planets/Tropical.png"),
--+            new Image("file:src/main/resources/images/planets/Venusian.png"),
--+            new Image("file:src/main/resources/images/planets/Volcanic.png")
--+    };
--     public Sphere planetNode;
-- 
--     // TODO: planets rings using FXyz torus?
--@@ -51,10 +51,8 @@
--         this.acceleration = new Vector3D();
--         this.mass = mass;
--         this.radius = radius;
---        int r = (int) (Math.random() * 155) + 100;
---        int g = (int) (Math.random() * 155) + 100;
---        int b = (int) (Math.random() * 155) + 100;
---        Color randColor = Color.rgb(r, g, b);
--+        double hue = Math.random() * 360;
--+        Color randColor = Color.hsb(hue, 1,1);
--         this.color = randColor;
--         this.spinRate = -1.5 + (Math.random() * 3);
--         this.isSun = isSun;
--@@ -64,7 +62,7 @@
--         planetNode.setTranslateY(position.y);
--         planetNode.setTranslateZ(position.z);
--         material = new PhongMaterial(color);
---        if(isSun){
--+        if (isSun) {
--             initSun();
--         } else {
--             initSphere();
--@@ -77,7 +75,7 @@
--         planetNode.setRotationAxis(new Point3D(0, 1, 0));
--     }
-- 
---    private void initSun(){
--+    private void initSun() {
--         material.setSelfIlluminationMap(sunTexture); //TODO: add more sun textures
--         material.setDiffuseColor(Color.BLACK);
--         material.setSpecularPower(0);
-Index: src/main/java/com/coolawesome/integrativeproject/utils/JsonPlanetManager.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/com/coolawesome/integrativeproject/utils/JsonPlanetManager.java b/src/main/java/com/coolawesome/integrativeproject/utils/JsonPlanetManager.java
-new file mode 100644
---- /dev/null	(date 1712065646468)
-+++ b/src/main/java/com/coolawesome/integrativeproject/utils/JsonPlanetManager.java	(date 1712065646468)
-@@ -0,0 +1,37 @@
-+package com.coolawesome.integrativeproject.utils;
-+
-+import com.coolawesome.integrativeproject.Planet;
-+import com.google.gson.Gson;
-+import com.google.gson.reflect.TypeToken;
-+import java.io.FileWriter;
-+import java.io.FileReader;
-+import java.io.IOException;
-+import java.lang.reflect.Type;
-+import java.util.Map;
-+
-+public class JsonPlanetManager {
-+
-+    private final Gson gson;
-+
-+    public JsonPlanetManager() {
-+        this.gson = new Gson();
-+    }
-+
-+    public void saveToJson(Map<String, Planet> planetMap, String filePath) {
-+        try (FileWriter writer = new FileWriter(filePath)) {
-+            gson.toJson(planetMap, writer);
-+        } catch (IOException e) {
-+            e.printStackTrace();
-+        }
-+    }
-+
-+    public Map<String, Planet> loadFromJson(String filePath) {
-+        try (FileReader reader = new FileReader(filePath)) {
-+            Type type = new TypeToken<Map<String, Planet>>(){}.getType();
-+            return gson.fromJson(reader, type);
-+        } catch (IOException e) {
-+            e.printStackTrace();
-+            return null;
-+        }
-+    }
-+}
-Index: src/main/java/module-info.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>module com.coolawesome.integrativeproject {\r\n    requires javafx.controls;\r\n    requires javafx.fxml;\r\n\r\n    requires org.controlsfx.controls;\r\n    requires org.fxyz3d.core;\r\n\r\n    opens com.coolawesome.integrativeproject to javafx.fxml;\r\n    exports com.coolawesome.integrativeproject;\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/module-info.java b/src/main/java/module-info.java
---- a/src/main/java/module-info.java	(revision e63e8417e4a4a520ae7b1f8c454f7228707e5d1b)
-+++ b/src/main/java/module-info.java	(date 1712065646496)
-@@ -4,6 +4,7 @@
- 
-     requires org.controlsfx.controls;
-     requires org.fxyz3d.core;
-+    requires com.google.gson;
- 
-     opens com.coolawesome.integrativeproject to javafx.fxml;
-     exports com.coolawesome.integrativeproject;
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_9_48_a_m___Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_9_48_a_m___Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_9_48_a_m___Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_9_48_a_m___Changes_.xml	(revision e58d595beb1d222a667ec3d9ce2c06e16fe7c2da)
+++ /dev/null	(revision e58d595beb1d222a667ec3d9ce2c06e16fe7c2da)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_2024-04-02_9_48_a_m__[Changes]" date="1712065710191" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_9_48_a_m__[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2024-04-02 9:48 a.m. [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_10_51_a_m___Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_10_51_a_m___Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_10_51_a_m___Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_10_51_a_m___Changes_.xml	(revision e58d595beb1d222a667ec3d9ce2c06e16fe7c2da)
+++ /dev/null	(revision e58d595beb1d222a667ec3d9ce2c06e16fe7c2da)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_2024-04-02_10_51_a_m__[Changes]" date="1712069503064" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_10_51_a_m__[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2024-04-02 10:51 a.m. [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_11_02_a_m___Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_11_02_a_m___Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_11_02_a_m___Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_11_02_a_m___Changes_.xml	(revision e58d595beb1d222a667ec3d9ce2c06e16fe7c2da)
+++ /dev/null	(revision e58d595beb1d222a667ec3d9ce2c06e16fe7c2da)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_2024-04-02_11_02_a_m__[Changes]" date="1712070128678" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_11_02_a_m__[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2024-04-02 11:02 a.m. [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_11_02_a_m__[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_11_02_a_m__[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_11_02_a_m__[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-04-02_11_02_a_m__[Changes]/shelved.patch	(revision e58d595beb1d222a667ec3d9ce2c06e16fe7c2da)
+++ /dev/null	(revision e58d595beb1d222a667ec3d9ce2c06e16fe7c2da)
@@ -1,142 +0,0 @@
-Index: src/main/java/com/coolawesome/integrativeproject/MainController.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.coolawesome.integrativeproject;\r\n\r\nimport com.coolawesome.integrativeproject.utils.Constants;\r\nimport javafx.animation.KeyFrame;\r\nimport javafx.animation.Timeline;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.stage.FileChooser;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Duration;\r\n\r\nimport java.io.File;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Random;\r\n\r\npublic class MainController {\r\n    public static double g = 0.001;\r\n    @FXML\r\n    public ListView<String> selectedPlanetInfoList;\r\n    @FXML\r\n    public Button viewRandBtn;\r\n    @FXML\r\n    private ListView<String> simulationInfoList;\r\n    @FXML\r\n    private Slider gConstSLD;\r\n    @FXML\r\n    private TextField gConstantTXTF;\r\n    @FXML\r\n    private Button playPauseBTN;\r\n    @FXML\r\n    private ChoiceBox<String> algoChoiceBox;\r\n\r\n    @FXML\r\n    private Button TextureBTN;\r\n\r\n    @FXML\r\n    private Button createBTN;\r\n\r\n    @FXML\r\n    private Slider massSLD;\r\n\r\n    @FXML\r\n    private TextField massTXTF;\r\n\r\n    @FXML\r\n    private Slider radiusSLD;\r\n\r\n    @FXML\r\n    private TextField radiusTXTF;\r\n\r\n    @FXML\r\n    private CheckBox sunCheckB;\r\n\r\n    public AnchorPane viewport;\r\n    private Simulation simulation;\r\n    private int secondsElapsed = 0;\r\n    Timeline timeline;\r\n    private ObservableList<String> simulationListContent = FXCollections.observableArrayList(\r\n            Constants.TIME_ELAPSED_PREFIX,\r\n            Constants.PLANET_COUNT_PREFIX,\r\n            Constants.AVERAGE_FORCE_PREFIX,\r\n            Constants.NUMBER_OF_COLLISIONS_PREFIX\r\n    );\r\n\r\n\r\n    /*\r\n    mass\r\n    radius\r\n    isSun\r\n    import texture\r\n     */\r\n\r\n    @FXML\r\n    public void initialize() {\r\n        viewport.sceneProperty().addListener((observableScene, oldScene, newScene) -> {\r\n            if (newScene != null) {\r\n                newScene.focusOwnerProperty().addListener((observable, oldFocusOwner, newFocusOwner) -> {\r\n                    if (newFocusOwner != viewport) {\r\n                        viewport.requestFocus();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    void controllerSetup(Simulation simulation) {\r\n        if (!isNull(simulation)) {\r\n            this.simulation = simulation;\r\n            updateSimInfo();\r\n        } else {\r\n            System.out.println(\"Simulation is null\");\r\n        }\r\n\r\n        if (!simulationListContent.isEmpty()) {\r\n            simulationInfoList.setItems(simulationListContent);\r\n        } else {\r\n            System.out.println(\"simulation list is empty\");\r\n        }\r\n\r\n        initializeTime();\r\n        sliderSetup();\r\n    }\r\n\r\n    public void sliderSetup() {\r\n        //g constant\r\n        if (!isNull(gConstSLD) && !isNull(gConstantTXTF)) {\r\n            gConstSLD.valueProperty().addListener(((observableValue, oldValue, newValue) -> {\r\n                String valueString = String.valueOf(newValue);\r\n                int endIndex = Math.min(valueString.length(), 4);\r\n                gConstantTXTF.setText(valueString.substring(0, endIndex));\r\n                updateGConst();\r\n            }));\r\n\r\n            gConstantTXTF.textProperty().addListener((observableValue, oldValue, newValue) -> {\r\n                if (!newValue.isEmpty() && !isValidDouble(newValue)) {\r\n                    gConstantTXTF.setText(oldValue);\r\n                }\r\n            });\r\n        }\r\n\r\n        //mass\r\n        if (!isNull(massSLD) && !isNull(massTXTF)) {\r\n            massSLD.valueProperty().addListener(((observableValue, oldValue, newValue) -> {\r\n                String valueString = String.valueOf(newValue);\r\n                int endIndex = Math.min(valueString.length(), 4);\r\n                massTXTF.setText(valueString.substring(0, endIndex));\r\n            }));\r\n\r\n            massTXTF.textProperty().addListener((observableValue, oldValue, newValue) -> {\r\n                if (!newValue.isEmpty() && !isValidDouble(newValue)) {\r\n                    massTXTF.setText(oldValue);\r\n                }\r\n            });\r\n        }\r\n\r\n        //radius\r\n        if (!isNull(radiusSLD) && !isNull(radiusTXTF)) {\r\n            radiusSLD.valueProperty().addListener(((observableValue, oldValue, newValue) -> {\r\n                String valueString = String.valueOf(newValue);\r\n                int endIndex = Math.min(valueString.length(), 4);\r\n                radiusTXTF.setText(valueString.substring(0, endIndex));\r\n            }));\r\n\r\n            radiusTXTF.textProperty().addListener((observableValue, oldValue, newValue) -> {\r\n                if (!newValue.isEmpty() && !isValidDouble(newValue)) {\r\n                    radiusTXTF.setText(oldValue);\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        setInitialValues();\r\n    }\r\n\r\n    private boolean isValidDouble(String str) {\r\n        if (isNull(str)) {\r\n            return false;\r\n        }\r\n        try {\r\n            Double.parseDouble(str);\r\n            return true;\r\n        } catch (NumberFormatException e) {\r\n            System.out.println(\"Input Corrected\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public void updateSimInfo() {\r\n        simulationListContent.set(1, Constants.PLANET_COUNT_PREFIX + getPlanetCount());\r\n    }\r\n\r\n    private void setInitialValues() {\r\n        if (!isNull(gConstSLD)) {\r\n            gConstSLD.setValue(g);\r\n        } else {\r\n            System.out.println(\"Gravity Constant Slider is null\");\r\n        }\r\n\r\n        massSLD.setValue(0);\r\n        massTXTF.setText(\"0\");\r\n        radiusSLD.setValue(0);\r\n        radiusTXTF.setText(\"0\");\r\n\r\n        algoChoiceBox.getItems().addAll(Constants.ALGORITHM_CHOICES);\r\n\r\n        algoChoiceBox.setValue(Constants.ALGORITHM_CHOICES[0]);\r\n\r\n        gConstantTXTF.setText(g + \"\");\r\n    }\r\n\r\n    private void initializeTime() {\r\n        timeline = new Timeline(new KeyFrame(\r\n                Duration.seconds(1),\r\n                event -> {\r\n                    secondsElapsed++;\r\n                    updateTimer();\r\n                }\r\n        ));\r\n        timeline.setCycleCount(Timeline.INDEFINITE);\r\n        timeline.play();\r\n    }\r\n\r\n    private void updateTimer() {\r\n        int hours = secondsElapsed / 3600;\r\n        int minutes = (secondsElapsed % 3600) / 60;\r\n        int seconds = secondsElapsed % 60;\r\n\r\n        simulationListContent.set(0, Constants.TIME_ELAPSED_PREFIX + String.format(\"%02d:%02d:%02d\", hours, minutes, seconds));\r\n    }\r\n\r\n    private int getPlanetCount() {\r\n        return simulation.planetMap.size();\r\n    }\r\n\r\n    private void updateGConst() {\r\n        g = gConstSLD.getValue();\r\n    }\r\n\r\n    private boolean isNull(Object obj) {\r\n        return obj == null;\r\n    }\r\n\r\n    @FXML\r\n    void playPauseSim(ActionEvent event) {\r\n        simulation.isPaused = !simulation.isPaused;\r\n\r\n        if (simulation.isPaused) {\r\n            System.out.println(\"Simulation is paused\");\r\n            playPauseBTN.setText(\"Play\");\r\n        } else {\r\n            System.out.println(\"Simulation is playing\");\r\n            playPauseBTN.setText(\"Pause\");\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void onTXTFUpdate(ActionEvent event) {\r\n        Slider source = (Slider) event.getSource();\r\n\r\n        if (source.equals(gConstSLD)) {\r\n            try {\r\n                gConstSLD.setValue(Double.parseDouble(gConstantTXTF.getText()));\r\n                updateGConst();\r\n            } catch (NumberFormatException e) {\r\n                System.out.println(\"Input Corrected in G Constant Slider\");\r\n            }\r\n\r\n        } else if (source.equals(massSLD)) {\r\n            try {\r\n                massSLD.setValue(Double.parseDouble(massTXTF.getText()));\r\n            } catch (NumberFormatException e) {\r\n                System.out.println(\"Input corrected in mass slider\");\r\n            }\r\n        } else if (source.equals(radiusSLD)) {\r\n            try {\r\n                massSLD.setValue(Double.parseDouble(massTXTF.getText()));\r\n                updateGConst();\r\n            } catch (NumberFormatException e) {\r\n                System.out.println(\"Input Corrected in mass Slider\");\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public void updateSelectedPlanetInfo(Planet planet) {\r\n        ObservableList<String> planetInfo = FXCollections.observableArrayList(\r\n                \"ID: \" + planet.id,\r\n                \"Position: \" + String.format(\"%.3f, %.3f, %.3f\", planet.position.x, planet.position.y, planet.position.z),\r\n                \"Velocity: \" + String.format(\"%.3f, %.3f, %.3f\", planet.velocity.x, planet.velocity.y, planet.velocity.z),\r\n                \"Accel: \" + String.format(\"%.1e, %.1e, %.1e\", planet.acceleration.x, planet.acceleration.y, planet.acceleration.z),\r\n                \"Radius: \" + String.format(\"%.3f\", planet.radius),\r\n                \"Mass: \" + String.format(\"%.3f\", planet.mass),\r\n                \"Color: \" + planet.color\r\n        );\r\n        selectedPlanetInfoList.setItems(planetInfo);\r\n    }\r\n\r\n    @FXML\r\n    public void viewRandPlanet(ActionEvent event) {\r\n        // Get a random planet from the planetMap\r\n        List<String> keys = new ArrayList<>(simulation.planetMap.keySet());\r\n        String randomKey = keys.get(new Random().nextInt(keys.size()));\r\n        Planet randomPlanet = simulation.planetMap.get(randomKey);\r\n\r\n        // Update the selected planet info\r\n        updateSelectedPlanetInfo(randomPlanet);\r\n\r\n        // Update the current camera planet in the SimulationView\r\n        simulation.simulationView.setCurrentCamPlanetID(randomKey);\r\n    }\r\n\r\n    public void saveJson(ActionEvent actionEvent) {\r\n        FileChooser fileChooser = new FileChooser();\r\n        fileChooser.setTitle(\"Save Planet Data\");\r\n        fileChooser.getExtensionFilters().addAll(new FileChooser.ExtensionFilter(\"JSON Files\", \"*.json\"));\r\n        Stage stage = (Stage) ((javafx.scene.Node) actionEvent.getSource()).getScene().getWindow();\r\n        File file = fileChooser.showSaveDialog(stage);\r\n\r\n        if (file != null) {\r\n            simulation.saveToJson(file.getPath());\r\n        }\r\n    }\r\n\r\n    public void loadJson(ActionEvent actionEvent) {\r\n        FileChooser fileChooser = new FileChooser();\r\n        fileChooser.setTitle(\"Load Planet Data\");\r\n        fileChooser.getExtensionFilters().addAll(new FileChooser.ExtensionFilter(\"JSON Files\", \"*.json\"));\r\n        Stage stage = (Stage) ((javafx.scene.Node) actionEvent.getSource()).getScene().getWindow();\r\n        File file = fileChooser.showOpenDialog(stage);\r\n\r\n        if (file != null) {\r\n            simulation.loadFromJson(file.getPath());\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/com/coolawesome/integrativeproject/MainController.java b/src/main/java/com/coolawesome/integrativeproject/MainController.java
---- a/src/main/java/com/coolawesome/integrativeproject/MainController.java	(revision 4897561c924d58ae0e60010448e4a57e0399458d)
-+++ b/src/main/java/com/coolawesome/integrativeproject/MainController.java	(date 1712069860746)
-@@ -1,6 +1,7 @@
- package com.coolawesome.integrativeproject;
- 
- import com.coolawesome.integrativeproject.utils.Constants;
-+import com.coolawesome.integrativeproject.utils.Vector3D;
- import javafx.animation.KeyFrame;
- import javafx.animation.Timeline;
- import javafx.collections.FXCollections;
-@@ -17,6 +18,7 @@
- import java.util.ArrayList;
- import java.util.List;
- import java.util.Random;
-+import java.util.UUID;
- 
- public class MainController {
-     public static double g = 0.001;
-@@ -152,8 +154,6 @@
-                 }
-             });
-         }
--
--
-         setInitialValues();
-     }
- 
-@@ -265,7 +265,28 @@
-             }
- 
-         }
-+    }
-+
-+    @FXML
-+    void createCustomPlanet(ActionEvent event) {
-+
-+        double Vx = Math.random() * 2;
-+        double Vy = Math.random() * 2;
-+        double Vz = Math.random() * 2;
-+
-+        Vector3D position = simulation.simulationView.getFacinVector();
-+        //Vector3D position = new Vector3D(0,0,0);
-+        Vector3D velocity = new Vector3D(Vx,Vy,Vz);
-+
-+        double radius = Double.parseDouble(radiusTXTF.getText());
-+        double mass = Double.parseDouble(massTXTF.getText());
-+        boolean isSun = sunCheckB.isSelected();
- 
-+        String uniqueID = UUID.randomUUID().toString().replaceAll("-", "");
-+
-+        Planet planet = new Planet(uniqueID, position, velocity, radius, mass, isSun);
-+
-+        simulation.planetMap.put(uniqueID, planet);
- 
-     }
- 
-Index: src/main/java/com/coolawesome/integrativeproject/Simulation.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.coolawesome.integrativeproject;\r\n\r\nimport com.coolawesome.integrativeproject.utils.JsonPlanetManager;\r\nimport com.coolawesome.integrativeproject.utils.Vector3D;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.scene.paint.Color;\r\n\r\nimport java.util.*;\r\n\r\npublic class Simulation {\r\n\r\n    Map<String, Planet> planetMap = new HashMap<>();\r\n    SimulationView simulationView;\r\n    JsonPlanetManager planetManager = new JsonPlanetManager();\r\n\r\n    boolean isPaused = false;\r\n\r\n    public Simulation(AnchorPane viewport, MainController controller) {\r\n        simulationView = new SimulationView(viewport, planetMap, controller);\r\n        initialize(100);\r\n    }\r\n\r\n    public void initialize(int numOfBodies) {\r\n        for (int i = 0; i < numOfBodies; i++) {\r\n\r\n            // Randomizing parameters\r\n            double x = Math.random() * 300 - 150;\r\n            double y = Math.random() * 300 - 150;\r\n            double z = Math.random() * 300 - 150;\r\n            Vector3D randPos = new Vector3D(x,y,z);\r\n            Vector3D randVel = new Vector3D();\r\n            double randRad = 1 + Math.random() * 2;\r\n            double randMass = 5000;\r\n//            boolean sun = Math.random() * 4 < 1;\r\n            boolean sun = false;\r\n\r\n            // Generate a unique ID for the planet\r\n            String uniqueID = UUID.randomUUID().toString().replaceAll(\"-\", \"\");\r\n\r\n            // Create the Planet object\r\n            Planet randPlanet = new Planet(uniqueID, randPos, randVel, randRad, randMass, sun);\r\n\r\n            // Add the Planet to the Map\r\n            planetMap.put(uniqueID, randPlanet);\r\n        }\r\n        planetMap.put(\"sun\", new Planet(\"sun\", new Vector3D(5000, 0, 0), new Vector3D(), 1000, 100000, true));\r\n    }\r\n\r\n    public void update(double dt){\r\n        // handle physics and collisions\r\n        if(!isPaused) {\r\n            updatePosition(dt);\r\n            handleCollisions();\r\n        }\r\n\r\n        simulationView.update(dt);\r\n    }\r\n\r\n    private void updatePosition(double dt) {\r\n        planetMap.forEach((id, p1) -> {\r\n            Vector3D ftotal = new Vector3D();\r\n            planetMap.forEach((id2, p2) -> {\r\n                if (p1 != p2) {\r\n                    Vector3D dist = Vector3D.difference(p2.position, p1.position);\r\n                    Vector3D f = Vector3D.multiplication((MainController.g * p1.mass * p2.mass) / (dist.magnitude() * dist.magnitude()), Vector3D.unitVector(dist));\r\n                    ftotal.add(f);\r\n                }\r\n                p1.acceleration = Vector3D.multiplication((1 / p1.mass), ftotal);\r\n                p1.velocity.add(Vector3D.multiplication(dt, p1.acceleration));\r\n                p1.position.add(Vector3D.multiplication(dt, p1.velocity));\r\n            });\r\n        });\r\n    }\r\n\r\n    private void handleCollisions() {\r\n        List<String> idPlanetsToRemove = new ArrayList<>();\r\n        planetMap.forEach((id, p1) -> {\r\n            planetMap.forEach((id2, p2) -> {\r\n                if (p1 != p2 && p1 != null && p2 != null) {\r\n                    Vector3D n = Vector3D.unitVector(Vector3D.difference(p1.position, p2.position));\r\n                    double dist = Math.min(Vector3D.sum(Vector3D.difference(p2.position, Vector3D.multiplication(p2.radius, n)), p1.position).magnitude(), Vector3D.difference(Vector3D.difference(p2.position, Vector3D.multiplication(p2.radius, n)), p1.position).magnitude());\r\n                    if (p1.radius > dist) {\r\n                        p1.mass += p2.mass;\r\n                        p1.radius = Math.sqrt(p1.radius * p1.radius + p2.radius * p2.radius);\r\n                        double totalMass = p1.mass + p2.mass;\r\n                        int red = (int)Math.min(((p1.mass/totalMass)*p1.color.getRed() + (p2.mass/totalMass)*p2.color.getRed())*255,255);\r\n                        int green = (int)Math.min(((p1.mass/totalMass)*p1.color.getGreen() + (p2.mass/totalMass)*p2.color.getGreen())*255,255);\r\n                        int blue = (int)Math.min(((p1.mass/totalMass)*p1.color.getBlue() + (p2.mass/totalMass)*p2.color.getBlue())*255,255);\r\n\r\n                        p1.color = Color.rgb(red, green, blue);\r\n                        idPlanetsToRemove.add(id2);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        idPlanetsToRemove.forEach((id) -> planetMap.remove(id));\r\n    }\r\n\r\n    public void saveToJson(String filePath) {\r\n        planetManager.saveToJson(planetMap, filePath);\r\n    }\r\n\r\n    public void loadFromJson(String filePath) {\r\n        planetMap = planetManager.loadFromJson(filePath);\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/com/coolawesome/integrativeproject/Simulation.java b/src/main/java/com/coolawesome/integrativeproject/Simulation.java
---- a/src/main/java/com/coolawesome/integrativeproject/Simulation.java	(revision 4897561c924d58ae0e60010448e4a57e0399458d)
-+++ b/src/main/java/com/coolawesome/integrativeproject/Simulation.java	(date 1712069503038)
-@@ -17,7 +17,7 @@
- 
-     public Simulation(AnchorPane viewport, MainController controller) {
-         simulationView = new SimulationView(viewport, planetMap, controller);
--        initialize(100);
-+        initialize(0);
-     }
- 
-     public void initialize(int numOfBodies) {
-Index: src/main/java/com/coolawesome/integrativeproject/SimulationView.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.coolawesome.integrativeproject;\r\n\r\nimport com.coolawesome.integrativeproject.utils.PIDController;\r\nimport javafx.scene.*;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.input.KeyCode;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.layout.AnchorPane;\r\n\r\nimport javafx.scene.shape.Sphere;\r\nimport org.fxyz3d.scene.Skybox;\r\nimport org.fxyz3d.utils.CameraTransformer;\r\n\r\nimport com.coolawesome.integrativeproject.utils.Vector3D;\r\n\r\nimport java.util.HashSet;\r\nimport java.util.Map;\r\nimport java.util.Set;\r\n\r\n\r\npublic class SimulationView extends Group {\r\n\r\n    private final Set<KeyCode> keysPressed = new HashSet<>();\r\n\r\n    private final Map<String, Planet> planetMap;\r\n    private final MainController mainController;\r\n    private String currentCamPlanetID = \"\";\r\n\r\n    private final Image\r\n        backImage = new Image(\"file:src/main/resources/images/skybox/back.png\"),\r\n        bottomImage = new Image(\"file:src/main/resources/images/skybox/bottom.png\"),\r\n        frontImage = new Image(\"file:src/main/resources/images/skybox/front.png\"),\r\n        leftImage = new Image(\"file:src/main/resources/images/skybox/left.png\"),\r\n        rightImage = new Image(\"file:src/main/resources/images/skybox/right.png\"),\r\n        topImage = new Image(\"file:src/main/resources/images/skybox/top.png\"),\r\n        cubeMap = new Image(\"file:src/main/resources/images/skybox/cubemap.png\");\r\n    private final Skybox skyBox;\r\n\r\n    private final PerspectiveCamera camera;\r\n    private final double FOV = 60;\r\n    private final CameraTransformer cameraTransform = new CameraTransformer();\r\n    private final Vector3D cameraVelocity = new Vector3D();\r\n\r\n    private double deltaMouseX, deltaMouseY = 0;\r\n\r\n    public SimulationView(AnchorPane pane, Map<String, Planet> planetMap, MainController mainController) {\r\n        this.planetMap = planetMap;\r\n        this.mainController = mainController;\r\n\r\n        // Set up the subscene for 3D content\r\n        SubScene subScene = new SubScene(this, pane.getWidth(), pane.getHeight(), true, SceneAntialiasing.BALANCED);\r\n        subScene.widthProperty().bind(pane.widthProperty());\r\n        subScene.heightProperty().bind(pane.heightProperty());\r\n        subScene.setFill(Color.BLACK);\r\n        pane.getChildren().add(subScene);\r\n\r\n        // Set up the camera\r\n        camera = new PerspectiveCamera(true);\r\n        camera.setNearClip(0.1);\r\n        camera.setFarClip(100000.0);\r\n        camera.setTranslateX(0);\r\n        camera.setTranslateY(0);\r\n        camera.setTranslateZ(0);\r\n        camera.setFieldOfView(FOV);\r\n        cameraTransform.getChildren().add(camera);\r\n        cameraTransform.t.setX(0);\r\n        cameraTransform.t.setY(0);\r\n        cameraTransform.t.setZ(0);\r\n        cameraTransform.rx.setPivotZ(0);\r\n        cameraTransform.ry.setPivotZ(0);\r\n        subScene.setCamera(camera);\r\n        cameraTransform.t.setZ(-100);\r\n\r\n        AmbientLight al = new AmbientLight(Color.rgb(100, 100, 100));\r\n\r\n        skyBox = new Skybox(topImage, bottomImage, rightImage, leftImage, frontImage, backImage, 100000, camera);\r\n\r\n        this.getChildren().addAll(al, skyBox);\r\n\r\n        // Set up the event handlers\r\n        subScene.setOnMousePressed(event -> {\r\n            deltaMouseX = event.getSceneX();\r\n            deltaMouseY = event.getSceneY();\r\n        });\r\n        subScene.setOnMouseDragged(event -> {\r\n            currentCamPlanetID = \"\";\r\n            deltaMouseX = event.getSceneX() - deltaMouseX;\r\n            deltaMouseY = event.getSceneY() - deltaMouseY;\r\n\r\n            cameraTransform.ry.setAngle(cameraTransform.ry.getAngle() + deltaMouseX * 0.2);\r\n            cameraTransform.rx.setAngle(cameraTransform.rx.getAngle() - deltaMouseY * 0.2);\r\n\r\n            deltaMouseX = event.getSceneX();\r\n            deltaMouseY = event.getSceneY();\r\n        });\r\n        pane.setOnKeyPressed(event -> keysPressed.add(event.getCode()));\r\n        pane.setOnKeyReleased(event -> keysPressed.remove(event.getCode()));\r\n\r\n        subScene.requestFocus();\r\n    }\r\n\r\n    public void update(double dt) {\r\n        // Update the selected planet info list\r\n        if (!currentCamPlanetID.isEmpty()) {\r\n            this.mainController.updateSelectedPlanetInfo(planetMap.get(currentCamPlanetID));\r\n        }\r\n\r\n        // check if there are any planets not currently in the scene\r\n        planetMap.forEach((id, planet) -> {\r\n            if (!this.getChildren().contains(planet.planetNode)) {\r\n                this.getChildren().add(planet.planetNode);\r\n                planet.planetNode.setOnMouseClicked(event -> {\r\n                    currentCamPlanetID = id;\r\n                });\r\n            }\r\n            if (planet.isSun && !this.getChildren().contains(planet.sunLight)) {\r\n                this.getChildren().add(planet.sunLight);\r\n            }\r\n        });\r\n\r\n        // check if there are any planets in the scene that are not in the map\r\n        Set<Node> nodesToRemove = new HashSet<>();\r\n        for (Node node : this.getChildren()) {\r\n            if (node instanceof Sphere) {\r\n                boolean found = false;\r\n                for (Planet planet : planetMap.values()) {\r\n                    if (planet.planetNode.equals(node)) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!found) {\r\n                    nodesToRemove.add(node);\r\n                    if (currentCamPlanetID.equals(node.getId())) {\r\n                        currentCamPlanetID = \"\";\r\n                    }\r\n                }\r\n            }\r\n            if (node instanceof PointLight) {\r\n                boolean found = false;\r\n                for (Planet planet : planetMap.values()) {\r\n                    if (planet.isSun && planet.sunLight.equals(node)) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!found) {\r\n                    nodesToRemove.add(node);\r\n                }\r\n            }\r\n        }\r\n        this.getChildren().removeAll(nodesToRemove);\r\n\r\n        //update the position of the planets\r\n        for (var planet : planetMap.values()) {\r\n            planet.planetNode.setTranslateX(planet.position.x);\r\n            planet.planetNode.setTranslateY(planet.position.y);\r\n            planet.planetNode.setTranslateZ(planet.position.z);\r\n            if (planet.isSun){\r\n                planet.sunLight.setTranslateX(planet.position.x);\r\n                planet.sunLight.setTranslateY(planet.position.y);\r\n                planet.sunLight.setTranslateZ(planet.position.z);\r\n            }\r\n        }\r\n\r\n        // Move the camera\r\n        double yaw = Math.toRadians(cameraTransform.ry.getAngle());\r\n        double pitch = Math.toRadians(cameraTransform.rx.getAngle());\r\n\r\n        Vector3D facing = getFacingVector(pitch, yaw);\r\n\r\n        Vector3D right = Vector3D.crossProduct(facing, new Vector3D(0, 1, 0));\r\n        right.normalize();\r\n\r\n        Vector3D up = Vector3D.crossProduct(right, facing);\r\n        up.normalize();\r\n\r\n        facing.multiply(0.6); // reduce the speed of the camera\r\n        right.multiply(0.6);\r\n        up.multiply(0.6);\r\n\r\n        if (!currentCamPlanetID.isEmpty()) {\r\n            Planet planet = planetMap.get(currentCamPlanetID);\r\n            if (planet != null) {\r\n                Vector3D camPos = new Vector3D(\r\n                        cameraTransform.t.getX(),\r\n                        cameraTransform.t.getY(),\r\n                        cameraTransform.t.getZ()\r\n                );\r\n                Vector3D planetPos = planet.position;\r\n                Vector3D direction = Vector3D.difference(planetPos, camPos);\r\n                double distance = direction.magnitude();\r\n                direction.normalize();\r\n\r\n                double directionPitch = -Math.toDegrees(Math.asin(direction.y));\r\n                double directionYaw = Math.toDegrees(Math.atan2(direction.x, direction.z));\r\n\r\n                cameraTransform.rx.setAngle(lerpAngle(cameraTransform.rx.getAngle(), directionPitch, 0.5));\r\n                cameraTransform.ry.setAngle(lerpAngle(cameraTransform.ry.getAngle(), directionYaw, 0.5));\r\n\r\n                //Use PID controller to move towards planet\r\n                direction.negate();\r\n                PIDController pidController = new PIDController(1e-15, 1e-2, 1e-8);\r\n                double pidOutput = pidController.calculate(planet.radius * 3, distance);\r\n                direction.multiply(pidOutput);\r\n                cameraVelocity.add(direction);\r\n            }\r\n\r\n        } else {\r\n\r\n            if (keysPressed.contains(KeyCode.W)) {\r\n                cameraVelocity.x += facing.x;\r\n                cameraVelocity.y -= facing.y;\r\n                cameraVelocity.z += facing.z;\r\n            }\r\n            if (keysPressed.contains(KeyCode.S)) {\r\n                cameraVelocity.x -= facing.x;\r\n                cameraVelocity.y += facing.y;\r\n                cameraVelocity.z -= facing.z;\r\n            }\r\n            if (keysPressed.contains(KeyCode.A)) {\r\n                cameraVelocity.x += right.x;\r\n                cameraVelocity.y -= right.y;\r\n                cameraVelocity.z += right.z;\r\n            }\r\n            if (keysPressed.contains(KeyCode.D)) {\r\n                cameraVelocity.x -= right.x;\r\n                cameraVelocity.y += right.y;\r\n                cameraVelocity.z -= right.z;\r\n            }\r\n            if (keysPressed.contains(KeyCode.SPACE)) {\r\n                cameraVelocity.x += up.x;\r\n                cameraVelocity.y -= up.y;\r\n                cameraVelocity.z += up.z;\r\n            }\r\n            if (keysPressed.contains(KeyCode.CONTROL)) {\r\n                cameraVelocity.x -= up.x;\r\n                cameraVelocity.y += up.y;\r\n                cameraVelocity.z -= up.z;\r\n            }\r\n            if (keysPressed.contains(KeyCode.SHIFT)) {\r\n                cameraVelocity.multiply(1.2);\r\n            }\r\n        }\r\n\r\n        cameraTransform.t.setX(cameraTransform.t.getX() + cameraVelocity.x);\r\n        cameraTransform.t.setY(cameraTransform.t.getY() + cameraVelocity.y);\r\n        cameraTransform.t.setZ(cameraTransform.t.getZ() + cameraVelocity.z);\r\n\r\n        cameraVelocity.multiply(0.8);\r\n    }\r\n\r\n    private double lerpAngle(double start, double end, double t) {\r\n        double diff = end - start;\r\n        // Normalize the difference in the angle\r\n        while (diff < -180) diff += 360;\r\n        while (diff > 180) diff -= 360;\r\n        return start + diff * t;\r\n    }\r\n\r\n    private Vector3D getFacingVector(double pitch, double yaw) {\r\n        double x = Math.cos(pitch) * Math.sin(yaw);\r\n        double y = Math.sin(pitch);\r\n        double z = Math.cos(pitch) * Math.cos(yaw);\r\n\r\n        Vector3D facing = new Vector3D(x, y, z);\r\n        facing.normalize();\r\n        return facing;\r\n    }\r\n\r\n    public Vector3D getFacinVector() {\r\n        return getFacingVector(Math.toRadians(cameraTransform.ry.getAngle()), Math.toRadians(cameraTransform.rx.getAngle()));\r\n    }\r\n\r\n    public void setCurrentCamPlanetID(String planetID) {\r\n        this.currentCamPlanetID = planetID;\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/com/coolawesome/integrativeproject/SimulationView.java b/src/main/java/com/coolawesome/integrativeproject/SimulationView.java
---- a/src/main/java/com/coolawesome/integrativeproject/SimulationView.java	(revision 4897561c924d58ae0e60010448e4a57e0399458d)
-+++ b/src/main/java/com/coolawesome/integrativeproject/SimulationView.java	(date 1712069503043)
-@@ -53,7 +53,6 @@
-         subScene.heightProperty().bind(pane.heightProperty());
-         subScene.setFill(Color.BLACK);
-         pane.getChildren().add(subScene);
--
-         // Set up the camera
-         camera = new PerspectiveCamera(true);
-         camera.setNearClip(0.1);
-Index: src/main/resources/com/coolawesome/integrativeproject/main-view.fxml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.geometry.Insets?>\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.control.CheckBox?>\r\n<?import javafx.scene.control.ChoiceBox?>\r\n<?import javafx.scene.control.Label?>\r\n<?import javafx.scene.control.ListView?>\r\n<?import javafx.scene.control.Separator?>\r\n<?import javafx.scene.control.Slider?>\r\n<?import javafx.scene.control.TextField?>\r\n<?import javafx.scene.control.TitledPane?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.layout.BorderPane?>\r\n<?import javafx.scene.layout.HBox?>\r\n<?import javafx.scene.layout.VBox?>\r\n<?import javafx.scene.paint.Color?>\r\n<?import javafx.scene.paint.LinearGradient?>\r\n<?import javafx.scene.paint.Stop?>\r\n<?import javafx.scene.text.Font?>\r\n\r\n<BorderPane xmlns=\"http://javafx.com/javafx/20.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"com.coolawesome.integrativeproject.MainController\">\r\n  <left>\r\n    <VBox spacing=\"10\" style=\"-fx-padding: 10;\">\r\n         <Label text=\"Space Simulation\">\r\n            <textFill>\r\n               <LinearGradient endX=\"0.6926713947990544\" endY=\"0.7990543735224587\" startY=\"0.6832151300236406\">\r\n                  <stops>\r\n                     <Stop>\r\n                        <color>\r\n                           <Color red=\"1.0\" green=\"0.6499999761581421\" />\r\n                        </color>\r\n                     </Stop>\r\n                     <Stop offset=\"1.0\">\r\n                        <color>\r\n                           <Color red=\"1.0\" green=\"0.28240740299224854\" blue=\"0.8923611044883728\" />\r\n                        </color>\r\n                     </Stop>\r\n                  </stops>\r\n               </LinearGradient>\r\n            </textFill>\r\n            <font>\r\n               <Font name=\"Marlett\" size=\"28.0\" />\r\n            </font>\r\n         </Label>\r\n         <HBox prefHeight=\"5.0\" prefWidth=\"241.0\" spacing=\"5.0\">\r\n            <children>\r\n               <Button fx:id=\"saveBTN\" mnemonicParsing=\"false\" text=\"Save\" onAction=\"#saveJson\"/>\r\n               <Button fx:id=\"loadBTN\" mnemonicParsing=\"false\" text=\"Load\" onAction=\"#loadJson\"/>\r\n            </children>\r\n         </HBox>\r\n      <Label text=\"Simulation Info:\" />\r\n      <ListView fx:id=\"simulationInfoList\" prefHeight=\"220.0\" prefWidth=\"220.0\">\r\n        <!-- Add items here -->\r\n      </ListView>\r\n         <AnchorPane prefHeight=\"200.0\" prefWidth=\"200.0\">\r\n            <children>\r\n               <Label text=\"Controls:\">\r\n                  <font>\r\n                     <Font size=\"14.0\" />\r\n                  </font>\r\n               </Label>\r\n               <VBox prefHeight=\"200.0\" prefWidth=\"247.0\">\r\n                  <children>\r\n                     <Label text=\"Algorithm:\">\r\n                        <VBox.margin>\r\n                           <Insets top=\"20.0\" />\r\n                        </VBox.margin>\r\n                        <padding>\r\n                           <Insets top=\"10.0\" />\r\n                        </padding>\r\n                     </Label>\r\n                     <ChoiceBox fx:id=\"algoChoiceBox\" prefHeight=\"25.0\" prefWidth=\"95.0\">\r\n                        <VBox.margin>\r\n                           <Insets top=\"5.0\" />\r\n                        </VBox.margin>\r\n                     </ChoiceBox>\r\n                     <HBox prefHeight=\"42.0\" prefWidth=\"220.0\">\r\n                        <children>\r\n                           <Button fx:id=\"playPauseBTN\" mnemonicParsing=\"false\" onAction=\"#playPauseSim\" text=\"Pause\" />\r\n                        </children>\r\n                        <VBox.margin>\r\n                           <Insets top=\"10.0\" />\r\n                        </VBox.margin>\r\n                     </HBox>\r\n                     <HBox alignment=\"CENTER_LEFT\" prefHeight=\"100.0\" prefWidth=\"200.0\">\r\n                        <VBox.margin>\r\n                           <Insets top=\"5.0\" />\r\n                        </VBox.margin>\r\n                     </HBox>\r\n                     <HBox alignment=\"CENTER_LEFT\" prefHeight=\"100.0\" prefWidth=\"200.0\">\r\n                        <children>\r\n                           <Label text=\"G Constant:\">\r\n                              <HBox.margin>\r\n                                 <Insets right=\"5.0\" />\r\n                              </HBox.margin>\r\n                           </Label>\r\n                           <Slider fx:id=\"gConstSLD\" blockIncrement=\"0.005\" max=\"0.01\" min=\"1.0E-8\" prefHeight=\"14.0\" prefWidth=\"84.0\" showTickMarks=\"true\">\r\n                              <HBox.margin>\r\n                                 <Insets />\r\n                              </HBox.margin>\r\n                           </Slider>\r\n                           <TextField fx:id=\"gConstantTXTF\" onAction=\"#onTXTFUpdate\" prefHeight=\"25.0\" prefWidth=\"80.0\" />\r\n                        </children>\r\n                     </HBox>\r\n                  </children>\r\n               </VBox>\r\n            </children>\r\n         </AnchorPane>\r\n    </VBox>\r\n  </left>\r\n  <center>\r\n    <AnchorPane fx:id=\"viewport\">\r\n      <!-- Content for viewport here -->\r\n    </AnchorPane>\r\n  </center>\r\n  <right>\r\n    <VBox spacing=\"10\" style=\"-fx-padding: 10;\">\r\n      <TitledPane collapsible=\"false\" text=\"New Planet Preview\">\r\n        <VBox>\r\n               <children>\r\n                  <AnchorPane maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"164.0\" prefWidth=\"214.0\">\r\n                     <padding>\r\n                        <Insets left=\"1.0\" right=\"1.0\" />\r\n                     </padding>\r\n                  </AnchorPane>\r\n                  <VBox prefHeight=\"200.0\" prefWidth=\"100.0\" spacing=\"30.0\">\r\n                     <children>\r\n                        <HBox prefHeight=\"100.0\" prefWidth=\"200.0\">\r\n                           <children>\r\n                              <Slider fx:id=\"massSLD\" />\r\n                              <TextField fx:id=\"massTXTF\" onAction=\"#onTXTFUpdate\" />\r\n                           </children>\r\n                        </HBox>\r\n                        <HBox prefHeight=\"100.0\" prefWidth=\"200.0\">\r\n                           <children>\r\n                              <Slider fx:id=\"radiusSLD\" />\r\n                              <TextField fx:id=\"radiusTXTF\" onAction=\"#onTXTFUpdate\" />\r\n                           </children>\r\n                        </HBox>\r\n                        <CheckBox fx:id=\"sunCheckB\" mnemonicParsing=\"false\" text=\"Sun\" />\r\n                        <Button fx:id=\"TextureBTN\" mnemonicParsing=\"false\" text=\"Texture\" />\r\n                        <Button fx:id=\"createBTN\" mnemonicParsing=\"false\" text=\"Create\" />\r\n                     </children>\r\n                  </VBox>\r\n               </children></VBox>\r\n      </TitledPane>\r\n      <TitledPane collapsible=\"false\" text=\"Currently Selected Planet Info\">\r\n        <VBox alignment=\"TOP_CENTER\" spacing=\"10.0\">\r\n               <children>\r\n                  <Button fx:id=\"viewRandBtn\" alignment=\"CENTER\" mnemonicParsing=\"false\" onAction=\"#viewRandPlanet\" text=\"View Random Planet\" textAlignment=\"CENTER\" />\r\n                  <Separator prefWidth=\"200.0\" />\r\n                   <ListView fx:id=\"selectedPlanetInfoList\" prefHeight=\"220.0\" prefWidth=\"220.0\">\r\n                       <!-- Add items here -->\r\n                   </ListView>\r\n               </children></VBox>\r\n      </TitledPane>\r\n    </VBox>\r\n  </right>\r\n</BorderPane>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/resources/com/coolawesome/integrativeproject/main-view.fxml b/src/main/resources/com/coolawesome/integrativeproject/main-view.fxml
---- a/src/main/resources/com/coolawesome/integrativeproject/main-view.fxml	(revision 4897561c924d58ae0e60010448e4a57e0399458d)
-+++ b/src/main/resources/com/coolawesome/integrativeproject/main-view.fxml	(date 1712069503049)
-@@ -126,21 +126,23 @@
-                   </AnchorPane>
-                   <VBox prefHeight="200.0" prefWidth="100.0" spacing="30.0">
-                      <children>
--                        <HBox prefHeight="100.0" prefWidth="200.0">
-+                        <HBox prefHeight="100.0" prefWidth="200.0" spacing="5.0">
-                            <children>
--                              <Slider fx:id="massSLD" />
--                              <TextField fx:id="massTXTF" onAction="#onTXTFUpdate" />
-+                              <Label text="Radius:" />
-+                              <Slider fx:id="massSLD" max="10.0" min="1.0" prefWidth="110.0" />
-+                              <TextField fx:id="massTXTF" onAction="#onTXTFUpdate" prefHeight="25.0" prefWidth="65.0" />
-                            </children>
-                         </HBox>
--                        <HBox prefHeight="100.0" prefWidth="200.0">
-+                        <HBox prefHeight="100.0" prefWidth="200.0" spacing="5.0">
-                            <children>
--                              <Slider fx:id="radiusSLD" />
--                              <TextField fx:id="radiusTXTF" onAction="#onTXTFUpdate" />
-+                              <Label text="Mass:" />
-+                              <Slider fx:id="radiusSLD" max="999999.0" min="1000.0" prefHeight="14.0" prefWidth="109.0" />
-+                              <TextField fx:id="radiusTXTF" onAction="#onTXTFUpdate" prefHeight="25.0" prefWidth="60.0" />
-                            </children>
-                         </HBox>
-                         <CheckBox fx:id="sunCheckB" mnemonicParsing="false" text="Sun" />
-                         <Button fx:id="TextureBTN" mnemonicParsing="false" text="Texture" />
--                        <Button fx:id="createBTN" mnemonicParsing="false" text="Create" />
-+                        <Button fx:id="createBTN" mnemonicParsing="false" onAction="#createCustomPlanet" text="Create" />
-                      </children>
-                   </VBox>
-                </children></VBox>
