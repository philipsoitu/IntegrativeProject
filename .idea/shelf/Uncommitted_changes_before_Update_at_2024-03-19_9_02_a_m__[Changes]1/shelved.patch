Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <annotationProcessing>\r\n      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\r\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\r\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\r\n        <outputRelativeToContentRoot value=\"true\" />\r\n        <module name=\"IntegrativeProject\" />\r\n      </profile>\r\n    </annotationProcessing>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
--- a/.idea/compiler.xml	
+++ b/.idea/compiler.xml	
@@ -2,6 +2,7 @@
 <project version="4">
   <component name="CompilerConfiguration">
     <annotationProcessing>
+      <profile default="true" name="Default" enabled="true" />
       <profile name="Maven default annotation processors profile" enabled="true">
         <sourceOutputDir name="target/generated-sources/annotations" />
         <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n    <option name=\"workspaceImportForciblyTurnedOn\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_21\" default=\"true\" project-jdk-name=\"openjdk-21\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -1,4 +1,3 @@
-<?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
   <component name="MavenProjectsManager">
Index: src/main/java/com/coolawesome/integrativeproject/Planet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.coolawesome.integrativeproject;\r\n\r\nimport com.coolawesome.integrativeproject.utils.Vector3D;\r\nimport javafx.geometry.Point3D;\r\nimport javafx.scene.PointLight;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.paint.PhongMaterial;\r\nimport javafx.scene.shape.Sphere;\r\n\r\n\r\npublic class Planet {\r\n\r\n    public Vector3D position;\r\n    public Vector3D velocity;\r\n    public Vector3D acceleration;\r\n    public double radius;\r\n    public double mass;\r\n    public double spinRate;\r\n    public Color color;\r\n    public PhongMaterial material;\r\n\r\n    public boolean isSun;\r\n    public PointLight sunLight;\r\n\r\n    private static final Image sunTexture = new Image(\"file:src/main/resources/images/planets/sun.jpg\");\r\n    private static final Image[] planetTextures = {\r\n        new Image(\"file:src/main/resources/images/planets/Alpine.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Gaseous1.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Gaseous2.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Gaseous3.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Gaseous4.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Icy.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Martian.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Savannah.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Swamp.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Terrestrial1.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Terrestrial2.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Terrestrial3.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Terrestrial4.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Tropical.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Venusian.png\"),\r\n        new Image(\"file:src/main/resources/images/planets/Volcanic.png\")\r\n};\r\n    public Sphere planetNode;\r\n\r\n    // TODO: planets rings using FXyz torus?\r\n    public Planet(Vector3D position, Vector3D velocity, double radius, double mass, boolean isSun) {\r\n        this.position = position;\r\n        this.velocity = velocity;\r\n        this.acceleration = new Vector3D();\r\n        this.mass = mass;\r\n        this.radius = radius;\r\n        int r = (int) (Math.random() * 155) + 100;\r\n        int g = (int) (Math.random() * 155) + 100;\r\n        int b = (int) (Math.random() * 155) + 100;\r\n        Color randColor = Color.rgb(r, g, b);\r\n        this.color = randColor;\r\n        this.spinRate = -1.5 + (Math.random() * 3);\r\n        this.isSun = isSun;\r\n\r\n        planetNode = new Sphere(radius);\r\n        planetNode.setTranslateX(position.x);\r\n        planetNode.setTranslateY(position.y);\r\n        planetNode.setTranslateZ(position.z);\r\n        material = new PhongMaterial(color);\r\n        if(isSun){\r\n            initSun();\r\n        } else {\r\n            initSphere();\r\n        }\r\n    }\r\n\r\n    private void initSphere() {\r\n        material.setDiffuseMap(planetTextures[(int) (Math.random() * planetTextures.length)]);\r\n        planetNode.setMaterial(material);\r\n        planetNode.setRotationAxis(new Point3D(0, 1, 0));\r\n    }\r\n\r\n    private void initSun(){\r\n        material.setSelfIlluminationMap(sunTexture); //TODO: add more sun textures\r\n        material.setDiffuseColor(Color.BLACK);\r\n        material.setSpecularPower(0);\r\n        planetNode.setMaterial(material);\r\n        planetNode.setRotationAxis(new Point3D(0, 1, 0));\r\n        sunLight = new PointLight(this.color);\r\n        sunLight.setTranslateX(this.position.x);\r\n        sunLight.setTranslateY(this.position.y);\r\n        sunLight.setTranslateZ(this.position.z);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/coolawesome/integrativeproject/Planet.java b/src/main/java/com/coolawesome/integrativeproject/Planet.java
--- a/src/main/java/com/coolawesome/integrativeproject/Planet.java	
+++ b/src/main/java/com/coolawesome/integrativeproject/Planet.java	
@@ -25,23 +25,23 @@
 
     private static final Image sunTexture = new Image("file:src/main/resources/images/planets/sun.jpg");
     private static final Image[] planetTextures = {
-        new Image("file:src/main/resources/images/planets/Alpine.png"),
-        new Image("file:src/main/resources/images/planets/Gaseous1.png"),
-        new Image("file:src/main/resources/images/planets/Gaseous2.png"),
-        new Image("file:src/main/resources/images/planets/Gaseous3.png"),
-        new Image("file:src/main/resources/images/planets/Gaseous4.png"),
-        new Image("file:src/main/resources/images/planets/Icy.png"),
-        new Image("file:src/main/resources/images/planets/Martian.png"),
-        new Image("file:src/main/resources/images/planets/Savannah.png"),
-        new Image("file:src/main/resources/images/planets/Swamp.png"),
-        new Image("file:src/main/resources/images/planets/Terrestrial1.png"),
-        new Image("file:src/main/resources/images/planets/Terrestrial2.png"),
-        new Image("file:src/main/resources/images/planets/Terrestrial3.png"),
-        new Image("file:src/main/resources/images/planets/Terrestrial4.png"),
-        new Image("file:src/main/resources/images/planets/Tropical.png"),
-        new Image("file:src/main/resources/images/planets/Venusian.png"),
-        new Image("file:src/main/resources/images/planets/Volcanic.png")
-};
+            new Image("file:src/main/resources/images/planets/Alpine.png"),
+            new Image("file:src/main/resources/images/planets/Gaseous1.png"),
+            new Image("file:src/main/resources/images/planets/Gaseous2.png"),
+            new Image("file:src/main/resources/images/planets/Gaseous3.png"),
+            new Image("file:src/main/resources/images/planets/Gaseous4.png"),
+            new Image("file:src/main/resources/images/planets/Icy.png"),
+            new Image("file:src/main/resources/images/planets/Martian.png"),
+            new Image("file:src/main/resources/images/planets/Savannah.png"),
+            new Image("file:src/main/resources/images/planets/Swamp.png"),
+            new Image("file:src/main/resources/images/planets/Terrestrial1.png"),
+            new Image("file:src/main/resources/images/planets/Terrestrial2.png"),
+            new Image("file:src/main/resources/images/planets/Terrestrial3.png"),
+            new Image("file:src/main/resources/images/planets/Terrestrial4.png"),
+            new Image("file:src/main/resources/images/planets/Tropical.png"),
+            new Image("file:src/main/resources/images/planets/Venusian.png"),
+            new Image("file:src/main/resources/images/planets/Volcanic.png")
+    };
     public Sphere planetNode;
 
     // TODO: planets rings using FXyz torus?
@@ -51,10 +51,8 @@
         this.acceleration = new Vector3D();
         this.mass = mass;
         this.radius = radius;
-        int r = (int) (Math.random() * 155) + 100;
-        int g = (int) (Math.random() * 155) + 100;
-        int b = (int) (Math.random() * 155) + 100;
-        Color randColor = Color.rgb(r, g, b);
+        double hue = Math.random() * 360;
+        Color randColor = Color.hsb(hue, 1,1);
         this.color = randColor;
         this.spinRate = -1.5 + (Math.random() * 3);
         this.isSun = isSun;
@@ -64,7 +62,7 @@
         planetNode.setTranslateY(position.y);
         planetNode.setTranslateZ(position.z);
         material = new PhongMaterial(color);
-        if(isSun){
+        if (isSun) {
             initSun();
         } else {
             initSphere();
@@ -77,7 +75,7 @@
         planetNode.setRotationAxis(new Point3D(0, 1, 0));
     }
 
-    private void initSun(){
+    private void initSun() {
         material.setSelfIlluminationMap(sunTexture); //TODO: add more sun textures
         material.setDiffuseColor(Color.BLACK);
         material.setSpecularPower(0);
